// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/talent/v4beta1/profile.proto

package com.google.cloud.talent.v4beta1;

public interface ProfileOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.talent.v4beta1.Profile)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required during profile update.
   * Resource name assigned to a profile by the API.
   * The format is
   * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
   * for example, "projects/foo/tenants/bar/profiles/baz".
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Required during profile update.
   * Resource name assigned to a profile by the API.
   * The format is
   * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
   * for example, "projects/foo/tenants/bar/profiles/baz".
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Profile's id in client system, if available. This value is unique for each
   * profile inside a tenant. An error is thrown if another profile with the
   * same external_id is created.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string external_id = 2;</code>
   * @return The externalId.
   */
  java.lang.String getExternalId();
  /**
   * <pre>
   * Profile's id in client system, if available. This value is unique for each
   * profile inside a tenant. An error is thrown if another profile with the
   * same external_id is created.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string external_id = 2;</code>
   * @return The bytes for externalId.
   */
  com.google.protobuf.ByteString
      getExternalIdBytes();

  /**
   * <pre>
   * The source description indicating where the profile is acquired.
   * For example, if a candidate profile is acquired from a resume, the user can
   * input "resume" here to indicate the source.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string source = 3;</code>
   * @return The source.
   */
  java.lang.String getSource();
  /**
   * <pre>
   * The source description indicating where the profile is acquired.
   * For example, if a candidate profile is acquired from a resume, the user can
   * input "resume" here to indicate the source.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string source = 3;</code>
   * @return The bytes for source.
   */
  com.google.protobuf.ByteString
      getSourceBytes();

  /**
   * <pre>
   * The URI set by clients that links to this profile's client-side copy.
   * The maximum number of bytes allowed is 4000.
   * </pre>
   *
   * <code>string uri = 4;</code>
   * @return The uri.
   */
  java.lang.String getUri();
  /**
   * <pre>
   * The URI set by clients that links to this profile's client-side copy.
   * The maximum number of bytes allowed is 4000.
   * </pre>
   *
   * <code>string uri = 4;</code>
   * @return The bytes for uri.
   */
  com.google.protobuf.ByteString
      getUriBytes();

  /**
   * <pre>
   * The cluster id of the profile to associate with other profile(s) for the
   * same candidate.
   * This field should be generated by the customer. If a value is not provided,
   * a random UUID is assigned to this field of the profile.
   * This is used to link multiple profiles to the same candidate. For example,
   * a client has a candidate with two profiles, where one was created recently
   * and the other one was created 5 years ago. These two profiles may be very
   * different. The clients can create the first profile and get a generated
   * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
   * indicating these two profiles are referring to the same candidate.
   * </pre>
   *
   * <code>string group_id = 5;</code>
   * @return The groupId.
   */
  java.lang.String getGroupId();
  /**
   * <pre>
   * The cluster id of the profile to associate with other profile(s) for the
   * same candidate.
   * This field should be generated by the customer. If a value is not provided,
   * a random UUID is assigned to this field of the profile.
   * This is used to link multiple profiles to the same candidate. For example,
   * a client has a candidate with two profiles, where one was created recently
   * and the other one was created 5 years ago. These two profiles may be very
   * different. The clients can create the first profile and get a generated
   * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
   * indicating these two profiles are referring to the same candidate.
   * </pre>
   *
   * <code>string group_id = 5;</code>
   * @return The bytes for groupId.
   */
  com.google.protobuf.ByteString
      getGroupIdBytes();

  /**
   * <pre>
   * Indicates the hirable status of the candidate.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
   * @return Whether the isHirable field is set.
   */
  boolean hasIsHirable();
  /**
   * <pre>
   * Indicates the hirable status of the candidate.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
   * @return The isHirable.
   */
  com.google.protobuf.BoolValue getIsHirable();
  /**
   * <pre>
   * Indicates the hirable status of the candidate.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getIsHirableOrBuilder();

  /**
   * <pre>
   * The timestamp when the profile was first created at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();
  /**
   * <pre>
   * The timestamp when the profile was first created at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   * <pre>
   * The timestamp when the profile was first created at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   * <pre>
   * The timestamp when the profile was last updated at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 8;</code>
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   * <pre>
   * The timestamp when the profile was last updated at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 8;</code>
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   * <pre>
   * The timestamp when the profile was last updated at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 8;</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   * <pre>
   * The timestamp when the profile was last updated as a result of a direct or
   * indirect action by a candidate.
   * These actions include:
   * * Direct actions such as the candidate submitting a new resume as part of a
   * job application to the agency, using a self-service tool such as a website
   * to update their profile, and so on.
   * * Indirect actions by the candidate such as uploading a resume to a job
   * board that is collected by the agency through a feed, providing a resume to
   * a recruiter who then uploads it into the ATS, and so on.
   * * Updates made to the candidate's profile by the recruiter as a result of
   * interacting with the candidate (for example adding a skill or work
   * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
   * excluded from this action type.
   * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
   * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
   * @return Whether the candidateUpdateTime field is set.
   */
  boolean hasCandidateUpdateTime();
  /**
   * <pre>
   * The timestamp when the profile was last updated as a result of a direct or
   * indirect action by a candidate.
   * These actions include:
   * * Direct actions such as the candidate submitting a new resume as part of a
   * job application to the agency, using a self-service tool such as a website
   * to update their profile, and so on.
   * * Indirect actions by the candidate such as uploading a resume to a job
   * board that is collected by the agency through a feed, providing a resume to
   * a recruiter who then uploads it into the ATS, and so on.
   * * Updates made to the candidate's profile by the recruiter as a result of
   * interacting with the candidate (for example adding a skill or work
   * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
   * excluded from this action type.
   * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
   * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
   * @return The candidateUpdateTime.
   */
  com.google.protobuf.Timestamp getCandidateUpdateTime();
  /**
   * <pre>
   * The timestamp when the profile was last updated as a result of a direct or
   * indirect action by a candidate.
   * These actions include:
   * * Direct actions such as the candidate submitting a new resume as part of a
   * job application to the agency, using a self-service tool such as a website
   * to update their profile, and so on.
   * * Indirect actions by the candidate such as uploading a resume to a job
   * board that is collected by the agency through a feed, providing a resume to
   * a recruiter who then uploads it into the ATS, and so on.
   * * Updates made to the candidate's profile by the recruiter as a result of
   * interacting with the candidate (for example adding a skill or work
   * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
   * excluded from this action type.
   * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
   * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCandidateUpdateTimeOrBuilder();

  /**
   * <pre>
   * The timestamp when the candidate's resume was added or updated on the
   * candidate's profile. Whether that resume was directly uploaded by a
   * candidate, pulled from a 3rd party job board feed, added by a recruiter,
   * and so on.
   * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
   * the create or update calls.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
   * @return Whether the resumeUpdateTime field is set.
   */
  boolean hasResumeUpdateTime();
  /**
   * <pre>
   * The timestamp when the candidate's resume was added or updated on the
   * candidate's profile. Whether that resume was directly uploaded by a
   * candidate, pulled from a 3rd party job board feed, added by a recruiter,
   * and so on.
   * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
   * the create or update calls.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
   * @return The resumeUpdateTime.
   */
  com.google.protobuf.Timestamp getResumeUpdateTime();
  /**
   * <pre>
   * The timestamp when the candidate's resume was added or updated on the
   * candidate's profile. Whether that resume was directly uploaded by a
   * candidate, pulled from a 3rd party job board feed, added by a recruiter,
   * and so on.
   * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
   * the create or update calls.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
   */
  com.google.protobuf.TimestampOrBuilder getResumeUpdateTimeOrBuilder();

  /**
   * <pre>
   * The resume representing this profile.
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
   * @return Whether the resume field is set.
   */
  boolean hasResume();
  /**
   * <pre>
   * The resume representing this profile.
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
   * @return The resume.
   */
  com.google.cloud.talent.v4beta1.Resume getResume();
  /**
   * <pre>
   * The resume representing this profile.
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
   */
  com.google.cloud.talent.v4beta1.ResumeOrBuilder getResumeOrBuilder();

  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.PersonName> 
      getPersonNamesList();
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  com.google.cloud.talent.v4beta1.PersonName getPersonNames(int index);
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  int getPersonNamesCount();
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.PersonNameOrBuilder> 
      getPersonNamesOrBuilderList();
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  com.google.cloud.talent.v4beta1.PersonNameOrBuilder getPersonNamesOrBuilder(
      int index);

  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Address> 
      getAddressesList();
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  com.google.cloud.talent.v4beta1.Address getAddresses(int index);
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  int getAddressesCount();
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.AddressOrBuilder> 
      getAddressesOrBuilderList();
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  com.google.cloud.talent.v4beta1.AddressOrBuilder getAddressesOrBuilder(
      int index);

  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Email> 
      getEmailAddressesList();
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  com.google.cloud.talent.v4beta1.Email getEmailAddresses(int index);
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  int getEmailAddressesCount();
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.EmailOrBuilder> 
      getEmailAddressesOrBuilderList();
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  com.google.cloud.talent.v4beta1.EmailOrBuilder getEmailAddressesOrBuilder(
      int index);

  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Phone> 
      getPhoneNumbersList();
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  com.google.cloud.talent.v4beta1.Phone getPhoneNumbers(int index);
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  int getPhoneNumbersCount();
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.PhoneOrBuilder> 
      getPhoneNumbersOrBuilderList();
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  com.google.cloud.talent.v4beta1.PhoneOrBuilder getPhoneNumbersOrBuilder(
      int index);

  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.PersonalUri> 
      getPersonalUrisList();
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  com.google.cloud.talent.v4beta1.PersonalUri getPersonalUris(int index);
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  int getPersonalUrisCount();
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.PersonalUriOrBuilder> 
      getPersonalUrisOrBuilderList();
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  com.google.cloud.talent.v4beta1.PersonalUriOrBuilder getPersonalUrisOrBuilder(
      int index);

  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.AdditionalContactInfo> 
      getAdditionalContactInfoList();
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  com.google.cloud.talent.v4beta1.AdditionalContactInfo getAdditionalContactInfo(int index);
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  int getAdditionalContactInfoCount();
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder> 
      getAdditionalContactInfoOrBuilderList();
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder getAdditionalContactInfoOrBuilder(
      int index);

  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.EmploymentRecord> 
      getEmploymentRecordsList();
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  com.google.cloud.talent.v4beta1.EmploymentRecord getEmploymentRecords(int index);
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  int getEmploymentRecordsCount();
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder> 
      getEmploymentRecordsOrBuilderList();
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder getEmploymentRecordsOrBuilder(
      int index);

  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.EducationRecord> 
      getEducationRecordsList();
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  com.google.cloud.talent.v4beta1.EducationRecord getEducationRecords(int index);
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  int getEducationRecordsCount();
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.EducationRecordOrBuilder> 
      getEducationRecordsOrBuilderList();
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  com.google.cloud.talent.v4beta1.EducationRecordOrBuilder getEducationRecordsOrBuilder(
      int index);

  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Skill> 
      getSkillsList();
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  com.google.cloud.talent.v4beta1.Skill getSkills(int index);
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  int getSkillsCount();
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.SkillOrBuilder> 
      getSkillsOrBuilderList();
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  com.google.cloud.talent.v4beta1.SkillOrBuilder getSkillsOrBuilder(
      int index);

  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Activity> 
      getActivitiesList();
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  com.google.cloud.talent.v4beta1.Activity getActivities(int index);
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  int getActivitiesCount();
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.ActivityOrBuilder> 
      getActivitiesOrBuilderList();
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  com.google.cloud.talent.v4beta1.ActivityOrBuilder getActivitiesOrBuilder(
      int index);

  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Publication> 
      getPublicationsList();
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  com.google.cloud.talent.v4beta1.Publication getPublications(int index);
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  int getPublicationsCount();
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.PublicationOrBuilder> 
      getPublicationsOrBuilderList();
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  com.google.cloud.talent.v4beta1.PublicationOrBuilder getPublicationsOrBuilder(
      int index);

  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Patent> 
      getPatentsList();
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  com.google.cloud.talent.v4beta1.Patent getPatents(int index);
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  int getPatentsCount();
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.PatentOrBuilder> 
      getPatentsOrBuilderList();
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  com.google.cloud.talent.v4beta1.PatentOrBuilder getPatentsOrBuilder(
      int index);

  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Certification> 
      getCertificationsList();
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  com.google.cloud.talent.v4beta1.Certification getCertifications(int index);
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  int getCertificationsCount();
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.CertificationOrBuilder> 
      getCertificationsOrBuilderList();
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  com.google.cloud.talent.v4beta1.CertificationOrBuilder getCertificationsOrBuilder(
      int index);

  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return A list containing the applications.
   */
  java.util.List<java.lang.String>
      getApplicationsList();
  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The count of applications.
   */
  int getApplicationsCount();
  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the element to return.
   * @return The applications at the given index.
   */
  java.lang.String getApplications(int index);
  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the value to return.
   * @return The bytes of the applications at the given index.
   */
  com.google.protobuf.ByteString
      getApplicationsBytes(int index);

  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return A list containing the assignments.
   */
  java.util.List<java.lang.String>
      getAssignmentsList();
  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The count of assignments.
   */
  int getAssignmentsCount();
  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the element to return.
   * @return The assignments at the given index.
   */
  java.lang.String getAssignments(int index);
  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the value to return.
   * @return The bytes of the assignments at the given index.
   */
  com.google.protobuf.ByteString
      getAssignmentsBytes(int index);

  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */
  int getCustomAttributesCount();
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */
  boolean containsCustomAttributes(
      java.lang.String key);
  /**
   * Use {@link #getCustomAttributesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
  getCustomAttributes();
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */
  java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
  getCustomAttributesMap();
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */

  com.google.cloud.talent.v4beta1.CustomAttribute getCustomAttributesOrDefault(
      java.lang.String key,
      com.google.cloud.talent.v4beta1.CustomAttribute defaultValue);
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */

  com.google.cloud.talent.v4beta1.CustomAttribute getCustomAttributesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Output only. Indicates if a summarized profile was created as part of the
   * profile creation API call. This flag does not indicate whether a profile is
   * searchable or not.
   * </pre>
   *
   * <code>bool processed = 27 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The processed.
   */
  boolean getProcessed();

  /**
   * <pre>
   * Output only. Keyword snippet shows how the search result is related to a
   * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
   * </pre>
   *
   * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The keywordSnippet.
   */
  java.lang.String getKeywordSnippet();
  /**
   * <pre>
   * Output only. Keyword snippet shows how the search result is related to a
   * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
   * </pre>
   *
   * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for keywordSnippet.
   */
  com.google.protobuf.ByteString
      getKeywordSnippetBytes();

  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.AvailabilitySignal> 
      getAvailabilitySignalsList();
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  com.google.cloud.talent.v4beta1.AvailabilitySignal getAvailabilitySignals(int index);
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  int getAvailabilitySignalsCount();
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder> 
      getAvailabilitySignalsOrBuilderList();
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder getAvailabilitySignalsOrBuilder(
      int index);

  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  java.util.List<com.google.cloud.talent.v4beta1.Location> 
      getDerivedAddressesList();
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  com.google.cloud.talent.v4beta1.Location getDerivedAddresses(int index);
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  int getDerivedAddressesCount();
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  java.util.List<? extends com.google.cloud.talent.v4beta1.LocationOrBuilder> 
      getDerivedAddressesOrBuilderList();
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  com.google.cloud.talent.v4beta1.LocationOrBuilder getDerivedAddressesOrBuilder(
      int index);
}
