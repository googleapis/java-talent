// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/talent/v4beta1/profile.proto

package com.google.cloud.talent.v4beta1;

/**
 * <pre>
 * A resource that represents the profile for a job candidate (also referred to
 * as a "single-source profile").
 * </pre>
 *
 * Protobuf type {@code google.cloud.talent.v4beta1.Profile}
 */
public final class Profile extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.talent.v4beta1.Profile)
    ProfileOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Profile.newBuilder() to construct.
  private Profile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Profile() {
    name_ = "";
    externalId_ = "";
    source_ = "";
    uri_ = "";
    groupId_ = "";
    personNames_ = java.util.Collections.emptyList();
    addresses_ = java.util.Collections.emptyList();
    emailAddresses_ = java.util.Collections.emptyList();
    phoneNumbers_ = java.util.Collections.emptyList();
    personalUris_ = java.util.Collections.emptyList();
    additionalContactInfo_ = java.util.Collections.emptyList();
    employmentRecords_ = java.util.Collections.emptyList();
    educationRecords_ = java.util.Collections.emptyList();
    skills_ = java.util.Collections.emptyList();
    activities_ = java.util.Collections.emptyList();
    publications_ = java.util.Collections.emptyList();
    patents_ = java.util.Collections.emptyList();
    certifications_ = java.util.Collections.emptyList();
    applications_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    assignments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    keywordSnippet_ = "";
    availabilitySignals_ = java.util.Collections.emptyList();
    derivedAddresses_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Profile();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Profile(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            externalId_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            source_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            uri_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            groupId_ = s;
            break;
          }
          case 50: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (isHirable_ != null) {
              subBuilder = isHirable_.toBuilder();
            }
            isHirable_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(isHirable_);
              isHirable_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (createTime_ != null) {
              subBuilder = createTime_.toBuilder();
            }
            createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createTime_);
              createTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (updateTime_ != null) {
              subBuilder = updateTime_.toBuilder();
            }
            updateTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(updateTime_);
              updateTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              personNames_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.PersonName>();
              mutable_bitField0_ |= 0x00000001;
            }
            personNames_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.PersonName.parser(), extensionRegistry));
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              addresses_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Address>();
              mutable_bitField0_ |= 0x00000002;
            }
            addresses_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Address.parser(), extensionRegistry));
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              emailAddresses_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Email>();
              mutable_bitField0_ |= 0x00000004;
            }
            emailAddresses_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Email.parser(), extensionRegistry));
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              phoneNumbers_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Phone>();
              mutable_bitField0_ |= 0x00000008;
            }
            phoneNumbers_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Phone.parser(), extensionRegistry));
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              personalUris_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.PersonalUri>();
              mutable_bitField0_ |= 0x00000010;
            }
            personalUris_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.PersonalUri.parser(), extensionRegistry));
            break;
          }
          case 130: {
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              additionalContactInfo_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.AdditionalContactInfo>();
              mutable_bitField0_ |= 0x00000020;
            }
            additionalContactInfo_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.AdditionalContactInfo.parser(), extensionRegistry));
            break;
          }
          case 138: {
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              employmentRecords_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.EmploymentRecord>();
              mutable_bitField0_ |= 0x00000040;
            }
            employmentRecords_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.EmploymentRecord.parser(), extensionRegistry));
            break;
          }
          case 146: {
            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
              educationRecords_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.EducationRecord>();
              mutable_bitField0_ |= 0x00000080;
            }
            educationRecords_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.EducationRecord.parser(), extensionRegistry));
            break;
          }
          case 154: {
            if (!((mutable_bitField0_ & 0x00000100) != 0)) {
              skills_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Skill>();
              mutable_bitField0_ |= 0x00000100;
            }
            skills_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Skill.parser(), extensionRegistry));
            break;
          }
          case 162: {
            if (!((mutable_bitField0_ & 0x00000200) != 0)) {
              activities_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Activity>();
              mutable_bitField0_ |= 0x00000200;
            }
            activities_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Activity.parser(), extensionRegistry));
            break;
          }
          case 170: {
            if (!((mutable_bitField0_ & 0x00000400) != 0)) {
              publications_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Publication>();
              mutable_bitField0_ |= 0x00000400;
            }
            publications_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Publication.parser(), extensionRegistry));
            break;
          }
          case 178: {
            if (!((mutable_bitField0_ & 0x00000800) != 0)) {
              patents_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Patent>();
              mutable_bitField0_ |= 0x00000800;
            }
            patents_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Patent.parser(), extensionRegistry));
            break;
          }
          case 186: {
            if (!((mutable_bitField0_ & 0x00001000) != 0)) {
              certifications_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Certification>();
              mutable_bitField0_ |= 0x00001000;
            }
            certifications_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Certification.parser(), extensionRegistry));
            break;
          }
          case 210: {
            if (!((mutable_bitField0_ & 0x00008000) != 0)) {
              customAttributes_ = com.google.protobuf.MapField.newMapField(
                  CustomAttributesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00008000;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
            customAttributes__ = input.readMessage(
                CustomAttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            customAttributes_.getMutableMap().put(
                customAttributes__.getKey(), customAttributes__.getValue());
            break;
          }
          case 216: {

            processed_ = input.readBool();
            break;
          }
          case 226: {
            java.lang.String s = input.readStringRequireUtf8();

            keywordSnippet_ = s;
            break;
          }
          case 378: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00002000) != 0)) {
              applications_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00002000;
            }
            applications_.add(s);
            break;
          }
          case 386: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00004000) != 0)) {
              assignments_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00004000;
            }
            assignments_.add(s);
            break;
          }
          case 426: {
            com.google.cloud.talent.v4beta1.Resume.Builder subBuilder = null;
            if (resume_ != null) {
              subBuilder = resume_.toBuilder();
            }
            resume_ = input.readMessage(com.google.cloud.talent.v4beta1.Resume.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resume_);
              resume_ = subBuilder.buildPartial();
            }

            break;
          }
          case 514: {
            if (!((mutable_bitField0_ & 0x00020000) != 0)) {
              derivedAddresses_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Location>();
              mutable_bitField0_ |= 0x00020000;
            }
            derivedAddresses_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.Location.parser(), extensionRegistry));
            break;
          }
          case 538: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (candidateUpdateTime_ != null) {
              subBuilder = candidateUpdateTime_.toBuilder();
            }
            candidateUpdateTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(candidateUpdateTime_);
              candidateUpdateTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 546: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (resumeUpdateTime_ != null) {
              subBuilder = resumeUpdateTime_.toBuilder();
            }
            resumeUpdateTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resumeUpdateTime_);
              resumeUpdateTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 562: {
            if (!((mutable_bitField0_ & 0x00010000) != 0)) {
              availabilitySignals_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.AvailabilitySignal>();
              mutable_bitField0_ |= 0x00010000;
            }
            availabilitySignals_.add(
                input.readMessage(com.google.cloud.talent.v4beta1.AvailabilitySignal.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        personNames_ = java.util.Collections.unmodifiableList(personNames_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        addresses_ = java.util.Collections.unmodifiableList(addresses_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        emailAddresses_ = java.util.Collections.unmodifiableList(emailAddresses_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        phoneNumbers_ = java.util.Collections.unmodifiableList(phoneNumbers_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        personalUris_ = java.util.Collections.unmodifiableList(personalUris_);
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        additionalContactInfo_ = java.util.Collections.unmodifiableList(additionalContactInfo_);
      }
      if (((mutable_bitField0_ & 0x00000040) != 0)) {
        employmentRecords_ = java.util.Collections.unmodifiableList(employmentRecords_);
      }
      if (((mutable_bitField0_ & 0x00000080) != 0)) {
        educationRecords_ = java.util.Collections.unmodifiableList(educationRecords_);
      }
      if (((mutable_bitField0_ & 0x00000100) != 0)) {
        skills_ = java.util.Collections.unmodifiableList(skills_);
      }
      if (((mutable_bitField0_ & 0x00000200) != 0)) {
        activities_ = java.util.Collections.unmodifiableList(activities_);
      }
      if (((mutable_bitField0_ & 0x00000400) != 0)) {
        publications_ = java.util.Collections.unmodifiableList(publications_);
      }
      if (((mutable_bitField0_ & 0x00000800) != 0)) {
        patents_ = java.util.Collections.unmodifiableList(patents_);
      }
      if (((mutable_bitField0_ & 0x00001000) != 0)) {
        certifications_ = java.util.Collections.unmodifiableList(certifications_);
      }
      if (((mutable_bitField0_ & 0x00002000) != 0)) {
        applications_ = applications_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00004000) != 0)) {
        assignments_ = assignments_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00020000) != 0)) {
        derivedAddresses_ = java.util.Collections.unmodifiableList(derivedAddresses_);
      }
      if (((mutable_bitField0_ & 0x00010000) != 0)) {
        availabilitySignals_ = java.util.Collections.unmodifiableList(availabilitySignals_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.talent.v4beta1.ProfileResourceProto.internal_static_google_cloud_talent_v4beta1_Profile_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 26:
        return internalGetCustomAttributes();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.talent.v4beta1.ProfileResourceProto.internal_static_google_cloud_talent_v4beta1_Profile_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.talent.v4beta1.Profile.class, com.google.cloud.talent.v4beta1.Profile.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Required during profile update.
   * Resource name assigned to a profile by the API.
   * The format is
   * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
   * for example, "projects/foo/tenants/bar/profiles/baz".
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required during profile update.
   * Resource name assigned to a profile by the API.
   * The format is
   * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
   * for example, "projects/foo/tenants/bar/profiles/baz".
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXTERNAL_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object externalId_;
  /**
   * <pre>
   * Profile's id in client system, if available. This value is unique for each
   * profile inside a tenant. An error is thrown if another profile with the
   * same external_id is created.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string external_id = 2;</code>
   * @return The externalId.
   */
  @java.lang.Override
  public java.lang.String getExternalId() {
    java.lang.Object ref = externalId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      externalId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Profile's id in client system, if available. This value is unique for each
   * profile inside a tenant. An error is thrown if another profile with the
   * same external_id is created.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string external_id = 2;</code>
   * @return The bytes for externalId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExternalIdBytes() {
    java.lang.Object ref = externalId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      externalId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SOURCE_FIELD_NUMBER = 3;
  private volatile java.lang.Object source_;
  /**
   * <pre>
   * The source description indicating where the profile is acquired.
   * For example, if a candidate profile is acquired from a resume, the user can
   * input "resume" here to indicate the source.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string source = 3;</code>
   * @return The source.
   */
  @java.lang.Override
  public java.lang.String getSource() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      source_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The source description indicating where the profile is acquired.
   * For example, if a candidate profile is acquired from a resume, the user can
   * input "resume" here to indicate the source.
   * The maximum number of bytes allowed is 100.
   * </pre>
   *
   * <code>string source = 3;</code>
   * @return The bytes for source.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSourceBytes() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      source_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int URI_FIELD_NUMBER = 4;
  private volatile java.lang.Object uri_;
  /**
   * <pre>
   * The URI set by clients that links to this profile's client-side copy.
   * The maximum number of bytes allowed is 4000.
   * </pre>
   *
   * <code>string uri = 4;</code>
   * @return The uri.
   */
  @java.lang.Override
  public java.lang.String getUri() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The URI set by clients that links to this profile's client-side copy.
   * The maximum number of bytes allowed is 4000.
   * </pre>
   *
   * <code>string uri = 4;</code>
   * @return The bytes for uri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUriBytes() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_ID_FIELD_NUMBER = 5;
  private volatile java.lang.Object groupId_;
  /**
   * <pre>
   * The cluster id of the profile to associate with other profile(s) for the
   * same candidate.
   * This field should be generated by the customer. If a value is not provided,
   * a random UUID is assigned to this field of the profile.
   * This is used to link multiple profiles to the same candidate. For example,
   * a client has a candidate with two profiles, where one was created recently
   * and the other one was created 5 years ago. These two profiles may be very
   * different. The clients can create the first profile and get a generated
   * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
   * indicating these two profiles are referring to the same candidate.
   * </pre>
   *
   * <code>string group_id = 5;</code>
   * @return The groupId.
   */
  @java.lang.Override
  public java.lang.String getGroupId() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The cluster id of the profile to associate with other profile(s) for the
   * same candidate.
   * This field should be generated by the customer. If a value is not provided,
   * a random UUID is assigned to this field of the profile.
   * This is used to link multiple profiles to the same candidate. For example,
   * a client has a candidate with two profiles, where one was created recently
   * and the other one was created 5 years ago. These two profiles may be very
   * different. The clients can create the first profile and get a generated
   * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
   * indicating these two profiles are referring to the same candidate.
   * </pre>
   *
   * <code>string group_id = 5;</code>
   * @return The bytes for groupId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupIdBytes() {
    java.lang.Object ref = groupId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IS_HIRABLE_FIELD_NUMBER = 6;
  private com.google.protobuf.BoolValue isHirable_;
  /**
   * <pre>
   * Indicates the hirable status of the candidate.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
   * @return Whether the isHirable field is set.
   */
  @java.lang.Override
  public boolean hasIsHirable() {
    return isHirable_ != null;
  }
  /**
   * <pre>
   * Indicates the hirable status of the candidate.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
   * @return The isHirable.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getIsHirable() {
    return isHirable_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : isHirable_;
  }
  /**
   * <pre>
   * Indicates the hirable status of the candidate.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getIsHirableOrBuilder() {
    return getIsHirable();
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 7;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * The timestamp when the profile was first created at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   * @return Whether the createTime field is set.
   */
  @java.lang.Override
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * The timestamp when the profile was first created at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   * @return The createTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * The timestamp when the profile was first created at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return getCreateTime();
  }

  public static final int UPDATE_TIME_FIELD_NUMBER = 8;
  private com.google.protobuf.Timestamp updateTime_;
  /**
   * <pre>
   * The timestamp when the profile was last updated at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 8;</code>
   * @return Whether the updateTime field is set.
   */
  @java.lang.Override
  public boolean hasUpdateTime() {
    return updateTime_ != null;
  }
  /**
   * <pre>
   * The timestamp when the profile was last updated at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 8;</code>
   * @return The updateTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getUpdateTime() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }
  /**
   * <pre>
   * The timestamp when the profile was last updated at this source.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
    return getUpdateTime();
  }

  public static final int CANDIDATE_UPDATE_TIME_FIELD_NUMBER = 67;
  private com.google.protobuf.Timestamp candidateUpdateTime_;
  /**
   * <pre>
   * The timestamp when the profile was last updated as a result of a direct or
   * indirect action by a candidate.
   * These actions include:
   * * Direct actions such as the candidate submitting a new resume as part of a
   * job application to the agency, using a self-service tool such as a website
   * to update their profile, and so on.
   * * Indirect actions by the candidate such as uploading a resume to a job
   * board that is collected by the agency through a feed, providing a resume to
   * a recruiter who then uploads it into the ATS, and so on.
   * * Updates made to the candidate's profile by the recruiter as a result of
   * interacting with the candidate (for example adding a skill or work
   * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
   * excluded from this action type.
   * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
   * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
   * @return Whether the candidateUpdateTime field is set.
   */
  @java.lang.Override
  public boolean hasCandidateUpdateTime() {
    return candidateUpdateTime_ != null;
  }
  /**
   * <pre>
   * The timestamp when the profile was last updated as a result of a direct or
   * indirect action by a candidate.
   * These actions include:
   * * Direct actions such as the candidate submitting a new resume as part of a
   * job application to the agency, using a self-service tool such as a website
   * to update their profile, and so on.
   * * Indirect actions by the candidate such as uploading a resume to a job
   * board that is collected by the agency through a feed, providing a resume to
   * a recruiter who then uploads it into the ATS, and so on.
   * * Updates made to the candidate's profile by the recruiter as a result of
   * interacting with the candidate (for example adding a skill or work
   * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
   * excluded from this action type.
   * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
   * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
   * @return The candidateUpdateTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCandidateUpdateTime() {
    return candidateUpdateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : candidateUpdateTime_;
  }
  /**
   * <pre>
   * The timestamp when the profile was last updated as a result of a direct or
   * indirect action by a candidate.
   * These actions include:
   * * Direct actions such as the candidate submitting a new resume as part of a
   * job application to the agency, using a self-service tool such as a website
   * to update their profile, and so on.
   * * Indirect actions by the candidate such as uploading a resume to a job
   * board that is collected by the agency through a feed, providing a resume to
   * a recruiter who then uploads it into the ATS, and so on.
   * * Updates made to the candidate's profile by the recruiter as a result of
   * interacting with the candidate (for example adding a skill or work
   * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
   * excluded from this action type.
   * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
   * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getCandidateUpdateTimeOrBuilder() {
    return getCandidateUpdateTime();
  }

  public static final int RESUME_UPDATE_TIME_FIELD_NUMBER = 68;
  private com.google.protobuf.Timestamp resumeUpdateTime_;
  /**
   * <pre>
   * The timestamp when the candidate's resume was added or updated on the
   * candidate's profile. Whether that resume was directly uploaded by a
   * candidate, pulled from a 3rd party job board feed, added by a recruiter,
   * and so on.
   * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
   * the create or update calls.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
   * @return Whether the resumeUpdateTime field is set.
   */
  @java.lang.Override
  public boolean hasResumeUpdateTime() {
    return resumeUpdateTime_ != null;
  }
  /**
   * <pre>
   * The timestamp when the candidate's resume was added or updated on the
   * candidate's profile. Whether that resume was directly uploaded by a
   * candidate, pulled from a 3rd party job board feed, added by a recruiter,
   * and so on.
   * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
   * the create or update calls.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
   * @return The resumeUpdateTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getResumeUpdateTime() {
    return resumeUpdateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : resumeUpdateTime_;
  }
  /**
   * <pre>
   * The timestamp when the candidate's resume was added or updated on the
   * candidate's profile. Whether that resume was directly uploaded by a
   * candidate, pulled from a 3rd party job board feed, added by a recruiter,
   * and so on.
   * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
   * the create or update calls.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getResumeUpdateTimeOrBuilder() {
    return getResumeUpdateTime();
  }

  public static final int RESUME_FIELD_NUMBER = 53;
  private com.google.cloud.talent.v4beta1.Resume resume_;
  /**
   * <pre>
   * The resume representing this profile.
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
   * @return Whether the resume field is set.
   */
  @java.lang.Override
  public boolean hasResume() {
    return resume_ != null;
  }
  /**
   * <pre>
   * The resume representing this profile.
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
   * @return The resume.
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Resume getResume() {
    return resume_ == null ? com.google.cloud.talent.v4beta1.Resume.getDefaultInstance() : resume_;
  }
  /**
   * <pre>
   * The resume representing this profile.
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.ResumeOrBuilder getResumeOrBuilder() {
    return getResume();
  }

  public static final int PERSON_NAMES_FIELD_NUMBER = 11;
  private java.util.List<com.google.cloud.talent.v4beta1.PersonName> personNames_;
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.PersonName> getPersonNamesList() {
    return personNames_;
  }
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.PersonNameOrBuilder> 
      getPersonNamesOrBuilderList() {
    return personNames_;
  }
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  @java.lang.Override
  public int getPersonNamesCount() {
    return personNames_.size();
  }
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.PersonName getPersonNames(int index) {
    return personNames_.get(index);
  }
  /**
   * <pre>
   * The names of the candidate this profile references.
   * Currently only one person name is supported.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.PersonNameOrBuilder getPersonNamesOrBuilder(
      int index) {
    return personNames_.get(index);
  }

  public static final int ADDRESSES_FIELD_NUMBER = 12;
  private java.util.List<com.google.cloud.talent.v4beta1.Address> addresses_;
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Address> getAddressesList() {
    return addresses_;
  }
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.AddressOrBuilder> 
      getAddressesOrBuilderList() {
    return addresses_;
  }
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  @java.lang.Override
  public int getAddressesCount() {
    return addresses_.size();
  }
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Address getAddresses(int index) {
    return addresses_.get(index);
  }
  /**
   * <pre>
   * The candidate's postal addresses. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
   * PERSONAL. During a search only personal addresses are considered. If there
   * is no such address, all addresses with unspecified usage are assumed to be
   * personal.
   * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
   * a search, only current addresses are considered. If there is no such
   * address, all addresses are assumed to be current.
   * When displaying a candidate's addresses, it is sometimes desirable to limit
   * the number of addresses shown. In these cases we recommend that you display
   * the addresses in the following order of priority:
   * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
   * set.
   * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
   * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
   * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.AddressOrBuilder getAddressesOrBuilder(
      int index) {
    return addresses_.get(index);
  }

  public static final int EMAIL_ADDRESSES_FIELD_NUMBER = 13;
  private java.util.List<com.google.cloud.talent.v4beta1.Email> emailAddresses_;
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Email> getEmailAddressesList() {
    return emailAddresses_;
  }
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.EmailOrBuilder> 
      getEmailAddressesOrBuilderList() {
    return emailAddresses_;
  }
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  @java.lang.Override
  public int getEmailAddressesCount() {
    return emailAddresses_.size();
  }
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Email getEmailAddresses(int index) {
    return emailAddresses_.get(index);
  }
  /**
   * <pre>
   * The candidate's email addresses.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.EmailOrBuilder getEmailAddressesOrBuilder(
      int index) {
    return emailAddresses_.get(index);
  }

  public static final int PHONE_NUMBERS_FIELD_NUMBER = 14;
  private java.util.List<com.google.cloud.talent.v4beta1.Phone> phoneNumbers_;
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Phone> getPhoneNumbersList() {
    return phoneNumbers_;
  }
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.PhoneOrBuilder> 
      getPhoneNumbersOrBuilderList() {
    return phoneNumbers_;
  }
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  @java.lang.Override
  public int getPhoneNumbersCount() {
    return phoneNumbers_.size();
  }
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Phone getPhoneNumbers(int index) {
    return phoneNumbers_.get(index);
  }
  /**
   * <pre>
   * The candidate's phone number(s).
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.PhoneOrBuilder getPhoneNumbersOrBuilder(
      int index) {
    return phoneNumbers_.get(index);
  }

  public static final int PERSONAL_URIS_FIELD_NUMBER = 15;
  private java.util.List<com.google.cloud.talent.v4beta1.PersonalUri> personalUris_;
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.PersonalUri> getPersonalUrisList() {
    return personalUris_;
  }
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.PersonalUriOrBuilder> 
      getPersonalUrisOrBuilderList() {
    return personalUris_;
  }
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  @java.lang.Override
  public int getPersonalUrisCount() {
    return personalUris_.size();
  }
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.PersonalUri getPersonalUris(int index) {
    return personalUris_.get(index);
  }
  /**
   * <pre>
   * The candidate's personal URIs.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.PersonalUriOrBuilder getPersonalUrisOrBuilder(
      int index) {
    return personalUris_.get(index);
  }

  public static final int ADDITIONAL_CONTACT_INFO_FIELD_NUMBER = 16;
  private java.util.List<com.google.cloud.talent.v4beta1.AdditionalContactInfo> additionalContactInfo_;
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.AdditionalContactInfo> getAdditionalContactInfoList() {
    return additionalContactInfo_;
  }
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder> 
      getAdditionalContactInfoOrBuilderList() {
    return additionalContactInfo_;
  }
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  @java.lang.Override
  public int getAdditionalContactInfoCount() {
    return additionalContactInfo_.size();
  }
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.AdditionalContactInfo getAdditionalContactInfo(int index) {
    return additionalContactInfo_.get(index);
  }
  /**
   * <pre>
   * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
   * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder getAdditionalContactInfoOrBuilder(
      int index) {
    return additionalContactInfo_.get(index);
  }

  public static final int EMPLOYMENT_RECORDS_FIELD_NUMBER = 17;
  private java.util.List<com.google.cloud.talent.v4beta1.EmploymentRecord> employmentRecords_;
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.EmploymentRecord> getEmploymentRecordsList() {
    return employmentRecords_;
  }
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder> 
      getEmploymentRecordsOrBuilderList() {
    return employmentRecords_;
  }
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  @java.lang.Override
  public int getEmploymentRecordsCount() {
    return employmentRecords_.size();
  }
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.EmploymentRecord getEmploymentRecords(int index) {
    return employmentRecords_.get(index);
  }
  /**
   * <pre>
   * The employment history records of the candidate. It's highly recommended
   * to input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the employment records.
   * * List different employment types separately, no matter how minor the
   * change is.
   * For example, only job title is changed from "software engineer" to "senior
   * software engineer".
   * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of employment records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder getEmploymentRecordsOrBuilder(
      int index) {
    return employmentRecords_.get(index);
  }

  public static final int EDUCATION_RECORDS_FIELD_NUMBER = 18;
  private java.util.List<com.google.cloud.talent.v4beta1.EducationRecord> educationRecords_;
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.EducationRecord> getEducationRecordsList() {
    return educationRecords_;
  }
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.EducationRecordOrBuilder> 
      getEducationRecordsOrBuilderList() {
    return educationRecords_;
  }
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  @java.lang.Override
  public int getEducationRecordsCount() {
    return educationRecords_.size();
  }
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.EducationRecord getEducationRecords(int index) {
    return educationRecords_.get(index);
  }
  /**
   * <pre>
   * The education history record of the candidate. It's highly recommended to
   * input this information as accurately as possible to help improve search
   * quality. Here are some recommendations:
   * * Specify the start and end dates of the education records.
   * * List each education type separately, no matter how minor the change is.
   * For example, the profile contains the education experience from the same
   * school but different degrees.
   * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
   * possible. If not, it's inferred from user inputs.
   * The limitation for max number of education records is 100.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.EducationRecordOrBuilder getEducationRecordsOrBuilder(
      int index) {
    return educationRecords_.get(index);
  }

  public static final int SKILLS_FIELD_NUMBER = 19;
  private java.util.List<com.google.cloud.talent.v4beta1.Skill> skills_;
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Skill> getSkillsList() {
    return skills_;
  }
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.SkillOrBuilder> 
      getSkillsOrBuilderList() {
    return skills_;
  }
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  @java.lang.Override
  public int getSkillsCount() {
    return skills_.size();
  }
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Skill getSkills(int index) {
    return skills_.get(index);
  }
  /**
   * <pre>
   * The skill set of the candidate. It's highly recommended to provide as
   * much information as possible to help improve the search quality.
   * The limitation for max number of skills is 500.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.SkillOrBuilder getSkillsOrBuilder(
      int index) {
    return skills_.get(index);
  }

  public static final int ACTIVITIES_FIELD_NUMBER = 20;
  private java.util.List<com.google.cloud.talent.v4beta1.Activity> activities_;
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Activity> getActivitiesList() {
    return activities_;
  }
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.ActivityOrBuilder> 
      getActivitiesOrBuilderList() {
    return activities_;
  }
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  @java.lang.Override
  public int getActivitiesCount() {
    return activities_.size();
  }
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Activity getActivities(int index) {
    return activities_.get(index);
  }
  /**
   * <pre>
   * The individual or collaborative activities which the candidate has
   * participated in, for example, open-source projects, class assignments that
   * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
   * The limitation for max number of activities is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.ActivityOrBuilder getActivitiesOrBuilder(
      int index) {
    return activities_.get(index);
  }

  public static final int PUBLICATIONS_FIELD_NUMBER = 21;
  private java.util.List<com.google.cloud.talent.v4beta1.Publication> publications_;
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Publication> getPublicationsList() {
    return publications_;
  }
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.PublicationOrBuilder> 
      getPublicationsOrBuilderList() {
    return publications_;
  }
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  @java.lang.Override
  public int getPublicationsCount() {
    return publications_.size();
  }
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Publication getPublications(int index) {
    return publications_.get(index);
  }
  /**
   * <pre>
   * The publications published by the candidate.
   * The limitation for max number of publications is 50.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.PublicationOrBuilder getPublicationsOrBuilder(
      int index) {
    return publications_.get(index);
  }

  public static final int PATENTS_FIELD_NUMBER = 22;
  private java.util.List<com.google.cloud.talent.v4beta1.Patent> patents_;
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Patent> getPatentsList() {
    return patents_;
  }
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.PatentOrBuilder> 
      getPatentsOrBuilderList() {
    return patents_;
  }
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  @java.lang.Override
  public int getPatentsCount() {
    return patents_.size();
  }
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Patent getPatents(int index) {
    return patents_.get(index);
  }
  /**
   * <pre>
   * The patents acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.PatentOrBuilder getPatentsOrBuilder(
      int index) {
    return patents_.get(index);
  }

  public static final int CERTIFICATIONS_FIELD_NUMBER = 23;
  private java.util.List<com.google.cloud.talent.v4beta1.Certification> certifications_;
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Certification> getCertificationsList() {
    return certifications_;
  }
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.CertificationOrBuilder> 
      getCertificationsOrBuilderList() {
    return certifications_;
  }
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  @java.lang.Override
  public int getCertificationsCount() {
    return certifications_.size();
  }
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Certification getCertifications(int index) {
    return certifications_.get(index);
  }
  /**
   * <pre>
   * The certifications acquired by the candidate.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.CertificationOrBuilder getCertificationsOrBuilder(
      int index) {
    return certifications_.get(index);
  }

  public static final int APPLICATIONS_FIELD_NUMBER = 47;
  private com.google.protobuf.LazyStringList applications_;
  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return A list containing the applications.
   */
  public com.google.protobuf.ProtocolStringList
      getApplicationsList() {
    return applications_;
  }
  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The count of applications.
   */
  public int getApplicationsCount() {
    return applications_.size();
  }
  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the element to return.
   * @return The applications at the given index.
   */
  public java.lang.String getApplications(int index) {
    return applications_.get(index);
  }
  /**
   * <pre>
   * Output only. The resource names of the candidate's applications.
   * </pre>
   *
   * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the value to return.
   * @return The bytes of the applications at the given index.
   */
  public com.google.protobuf.ByteString
      getApplicationsBytes(int index) {
    return applications_.getByteString(index);
  }

  public static final int ASSIGNMENTS_FIELD_NUMBER = 48;
  private com.google.protobuf.LazyStringList assignments_;
  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return A list containing the assignments.
   */
  public com.google.protobuf.ProtocolStringList
      getAssignmentsList() {
    return assignments_;
  }
  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The count of assignments.
   */
  public int getAssignmentsCount() {
    return assignments_.size();
  }
  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the element to return.
   * @return The assignments at the given index.
   */
  public java.lang.String getAssignments(int index) {
    return assignments_.get(index);
  }
  /**
   * <pre>
   * Output only. The resource names of the candidate's assignments.
   * </pre>
   *
   * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @param index The index of the value to return.
   * @return The bytes of the assignments at the given index.
   */
  public com.google.protobuf.ByteString
      getAssignmentsBytes(int index) {
    return assignments_.getByteString(index);
  }

  public static final int CUSTOM_ATTRIBUTES_FIELD_NUMBER = 26;
  private static final class CustomAttributesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>newDefaultInstance(
                com.google.cloud.talent.v4beta1.ProfileResourceProto.internal_static_google_cloud_talent_v4beta1_Profile_CustomAttributesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.cloud.talent.v4beta1.CustomAttribute.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> customAttributes_;
  private com.google.protobuf.MapField<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
  internalGetCustomAttributes() {
    if (customAttributes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          CustomAttributesDefaultEntryHolder.defaultEntry);
    }
    return customAttributes_;
  }

  public int getCustomAttributesCount() {
    return internalGetCustomAttributes().getMap().size();
  }
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */

  @java.lang.Override
  public boolean containsCustomAttributes(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetCustomAttributes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getCustomAttributesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> getCustomAttributes() {
    return getCustomAttributesMap();
  }
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> getCustomAttributesMap() {
    return internalGetCustomAttributes().getMap();
  }
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */
  @java.lang.Override

  public com.google.cloud.talent.v4beta1.CustomAttribute getCustomAttributesOrDefault(
      java.lang.String key,
      com.google.cloud.talent.v4beta1.CustomAttribute defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> map =
        internalGetCustomAttributes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A map of fields to hold both filterable and non-filterable custom profile
   * attributes that aren't covered by the provided structured fields. See
   * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
   * At most 100 filterable and at most 100 unfilterable keys are supported. If
   * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
   * by default. These are filterable when the `filterable` flag is set to
   * `true`.
   * Numeric custom attributes: each key can only map to one numeric value,
   * otherwise an error is thrown. Client can also filter on numeric custom
   * attributes using '&gt;', '&lt;' or '=' operators.
   * String custom attributes: each key can map up to 50 string values. For
   * filterable string value, each value has a byte size of no more than 256B.
   * For unfilterable string values, the maximum byte size of a single key is
   * 64B. An error is thrown for any request exceeding the limit.
   * The maximum total byte size is 10KB.
   * </pre>
   *
   * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
   */
  @java.lang.Override

  public com.google.cloud.talent.v4beta1.CustomAttribute getCustomAttributesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> map =
        internalGetCustomAttributes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int PROCESSED_FIELD_NUMBER = 27;
  private boolean processed_;
  /**
   * <pre>
   * Output only. Indicates if a summarized profile was created as part of the
   * profile creation API call. This flag does not indicate whether a profile is
   * searchable or not.
   * </pre>
   *
   * <code>bool processed = 27 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The processed.
   */
  @java.lang.Override
  public boolean getProcessed() {
    return processed_;
  }

  public static final int KEYWORD_SNIPPET_FIELD_NUMBER = 28;
  private volatile java.lang.Object keywordSnippet_;
  /**
   * <pre>
   * Output only. Keyword snippet shows how the search result is related to a
   * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
   * </pre>
   *
   * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The keywordSnippet.
   */
  @java.lang.Override
  public java.lang.String getKeywordSnippet() {
    java.lang.Object ref = keywordSnippet_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keywordSnippet_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. Keyword snippet shows how the search result is related to a
   * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
   * </pre>
   *
   * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for keywordSnippet.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeywordSnippetBytes() {
    java.lang.Object ref = keywordSnippet_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keywordSnippet_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AVAILABILITY_SIGNALS_FIELD_NUMBER = 70;
  private java.util.List<com.google.cloud.talent.v4beta1.AvailabilitySignal> availabilitySignals_;
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.AvailabilitySignal> getAvailabilitySignalsList() {
    return availabilitySignals_;
  }
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder> 
      getAvailabilitySignalsOrBuilderList() {
    return availabilitySignals_;
  }
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public int getAvailabilitySignalsCount() {
    return availabilitySignals_.size();
  }
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.AvailabilitySignal getAvailabilitySignals(int index) {
    return availabilitySignals_.get(index);
  }
  /**
   * <pre>
   * Output only. Candidate's availability signals.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder getAvailabilitySignalsOrBuilder(
      int index) {
    return availabilitySignals_.get(index);
  }

  public static final int DERIVED_ADDRESSES_FIELD_NUMBER = 64;
  private java.util.List<com.google.cloud.talent.v4beta1.Location> derivedAddresses_;
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.talent.v4beta1.Location> getDerivedAddressesList() {
    return derivedAddresses_;
  }
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.talent.v4beta1.LocationOrBuilder> 
      getDerivedAddressesOrBuilderList() {
    return derivedAddresses_;
  }
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public int getDerivedAddressesCount() {
    return derivedAddresses_.size();
  }
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Location getDerivedAddresses(int index) {
    return derivedAddresses_.get(index);
  }
  /**
   * <pre>
   * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
   * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
   * same order.
   * </pre>
   *
   * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   */
  @java.lang.Override
  public com.google.cloud.talent.v4beta1.LocationOrBuilder getDerivedAddressesOrBuilder(
      int index) {
    return derivedAddresses_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!getExternalIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, externalId_);
    }
    if (!getSourceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, source_);
    }
    if (!getUriBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, uri_);
    }
    if (!getGroupIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, groupId_);
    }
    if (isHirable_ != null) {
      output.writeMessage(6, getIsHirable());
    }
    if (createTime_ != null) {
      output.writeMessage(7, getCreateTime());
    }
    if (updateTime_ != null) {
      output.writeMessage(8, getUpdateTime());
    }
    for (int i = 0; i < personNames_.size(); i++) {
      output.writeMessage(11, personNames_.get(i));
    }
    for (int i = 0; i < addresses_.size(); i++) {
      output.writeMessage(12, addresses_.get(i));
    }
    for (int i = 0; i < emailAddresses_.size(); i++) {
      output.writeMessage(13, emailAddresses_.get(i));
    }
    for (int i = 0; i < phoneNumbers_.size(); i++) {
      output.writeMessage(14, phoneNumbers_.get(i));
    }
    for (int i = 0; i < personalUris_.size(); i++) {
      output.writeMessage(15, personalUris_.get(i));
    }
    for (int i = 0; i < additionalContactInfo_.size(); i++) {
      output.writeMessage(16, additionalContactInfo_.get(i));
    }
    for (int i = 0; i < employmentRecords_.size(); i++) {
      output.writeMessage(17, employmentRecords_.get(i));
    }
    for (int i = 0; i < educationRecords_.size(); i++) {
      output.writeMessage(18, educationRecords_.get(i));
    }
    for (int i = 0; i < skills_.size(); i++) {
      output.writeMessage(19, skills_.get(i));
    }
    for (int i = 0; i < activities_.size(); i++) {
      output.writeMessage(20, activities_.get(i));
    }
    for (int i = 0; i < publications_.size(); i++) {
      output.writeMessage(21, publications_.get(i));
    }
    for (int i = 0; i < patents_.size(); i++) {
      output.writeMessage(22, patents_.get(i));
    }
    for (int i = 0; i < certifications_.size(); i++) {
      output.writeMessage(23, certifications_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetCustomAttributes(),
        CustomAttributesDefaultEntryHolder.defaultEntry,
        26);
    if (processed_ != false) {
      output.writeBool(27, processed_);
    }
    if (!getKeywordSnippetBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 28, keywordSnippet_);
    }
    for (int i = 0; i < applications_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 47, applications_.getRaw(i));
    }
    for (int i = 0; i < assignments_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 48, assignments_.getRaw(i));
    }
    if (resume_ != null) {
      output.writeMessage(53, getResume());
    }
    for (int i = 0; i < derivedAddresses_.size(); i++) {
      output.writeMessage(64, derivedAddresses_.get(i));
    }
    if (candidateUpdateTime_ != null) {
      output.writeMessage(67, getCandidateUpdateTime());
    }
    if (resumeUpdateTime_ != null) {
      output.writeMessage(68, getResumeUpdateTime());
    }
    for (int i = 0; i < availabilitySignals_.size(); i++) {
      output.writeMessage(70, availabilitySignals_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!getExternalIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, externalId_);
    }
    if (!getSourceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, source_);
    }
    if (!getUriBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, uri_);
    }
    if (!getGroupIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, groupId_);
    }
    if (isHirable_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getIsHirable());
    }
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getCreateTime());
    }
    if (updateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getUpdateTime());
    }
    for (int i = 0; i < personNames_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, personNames_.get(i));
    }
    for (int i = 0; i < addresses_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, addresses_.get(i));
    }
    for (int i = 0; i < emailAddresses_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, emailAddresses_.get(i));
    }
    for (int i = 0; i < phoneNumbers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, phoneNumbers_.get(i));
    }
    for (int i = 0; i < personalUris_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, personalUris_.get(i));
    }
    for (int i = 0; i < additionalContactInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, additionalContactInfo_.get(i));
    }
    for (int i = 0; i < employmentRecords_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, employmentRecords_.get(i));
    }
    for (int i = 0; i < educationRecords_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, educationRecords_.get(i));
    }
    for (int i = 0; i < skills_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, skills_.get(i));
    }
    for (int i = 0; i < activities_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, activities_.get(i));
    }
    for (int i = 0; i < publications_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, publications_.get(i));
    }
    for (int i = 0; i < patents_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, patents_.get(i));
    }
    for (int i = 0; i < certifications_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, certifications_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> entry
         : internalGetCustomAttributes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
      customAttributes__ = CustomAttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, customAttributes__);
    }
    if (processed_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(27, processed_);
    }
    if (!getKeywordSnippetBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(28, keywordSnippet_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < applications_.size(); i++) {
        dataSize += computeStringSizeNoTag(applications_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getApplicationsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < assignments_.size(); i++) {
        dataSize += computeStringSizeNoTag(assignments_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getAssignmentsList().size();
    }
    if (resume_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(53, getResume());
    }
    for (int i = 0; i < derivedAddresses_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(64, derivedAddresses_.get(i));
    }
    if (candidateUpdateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(67, getCandidateUpdateTime());
    }
    if (resumeUpdateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(68, getResumeUpdateTime());
    }
    for (int i = 0; i < availabilitySignals_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(70, availabilitySignals_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.talent.v4beta1.Profile)) {
      return super.equals(obj);
    }
    com.google.cloud.talent.v4beta1.Profile other = (com.google.cloud.talent.v4beta1.Profile) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getExternalId()
        .equals(other.getExternalId())) return false;
    if (!getSource()
        .equals(other.getSource())) return false;
    if (!getUri()
        .equals(other.getUri())) return false;
    if (!getGroupId()
        .equals(other.getGroupId())) return false;
    if (hasIsHirable() != other.hasIsHirable()) return false;
    if (hasIsHirable()) {
      if (!getIsHirable()
          .equals(other.getIsHirable())) return false;
    }
    if (hasCreateTime() != other.hasCreateTime()) return false;
    if (hasCreateTime()) {
      if (!getCreateTime()
          .equals(other.getCreateTime())) return false;
    }
    if (hasUpdateTime() != other.hasUpdateTime()) return false;
    if (hasUpdateTime()) {
      if (!getUpdateTime()
          .equals(other.getUpdateTime())) return false;
    }
    if (hasCandidateUpdateTime() != other.hasCandidateUpdateTime()) return false;
    if (hasCandidateUpdateTime()) {
      if (!getCandidateUpdateTime()
          .equals(other.getCandidateUpdateTime())) return false;
    }
    if (hasResumeUpdateTime() != other.hasResumeUpdateTime()) return false;
    if (hasResumeUpdateTime()) {
      if (!getResumeUpdateTime()
          .equals(other.getResumeUpdateTime())) return false;
    }
    if (hasResume() != other.hasResume()) return false;
    if (hasResume()) {
      if (!getResume()
          .equals(other.getResume())) return false;
    }
    if (!getPersonNamesList()
        .equals(other.getPersonNamesList())) return false;
    if (!getAddressesList()
        .equals(other.getAddressesList())) return false;
    if (!getEmailAddressesList()
        .equals(other.getEmailAddressesList())) return false;
    if (!getPhoneNumbersList()
        .equals(other.getPhoneNumbersList())) return false;
    if (!getPersonalUrisList()
        .equals(other.getPersonalUrisList())) return false;
    if (!getAdditionalContactInfoList()
        .equals(other.getAdditionalContactInfoList())) return false;
    if (!getEmploymentRecordsList()
        .equals(other.getEmploymentRecordsList())) return false;
    if (!getEducationRecordsList()
        .equals(other.getEducationRecordsList())) return false;
    if (!getSkillsList()
        .equals(other.getSkillsList())) return false;
    if (!getActivitiesList()
        .equals(other.getActivitiesList())) return false;
    if (!getPublicationsList()
        .equals(other.getPublicationsList())) return false;
    if (!getPatentsList()
        .equals(other.getPatentsList())) return false;
    if (!getCertificationsList()
        .equals(other.getCertificationsList())) return false;
    if (!getApplicationsList()
        .equals(other.getApplicationsList())) return false;
    if (!getAssignmentsList()
        .equals(other.getAssignmentsList())) return false;
    if (!internalGetCustomAttributes().equals(
        other.internalGetCustomAttributes())) return false;
    if (getProcessed()
        != other.getProcessed()) return false;
    if (!getKeywordSnippet()
        .equals(other.getKeywordSnippet())) return false;
    if (!getAvailabilitySignalsList()
        .equals(other.getAvailabilitySignalsList())) return false;
    if (!getDerivedAddressesList()
        .equals(other.getDerivedAddressesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + EXTERNAL_ID_FIELD_NUMBER;
    hash = (53 * hash) + getExternalId().hashCode();
    hash = (37 * hash) + SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getSource().hashCode();
    hash = (37 * hash) + URI_FIELD_NUMBER;
    hash = (53 * hash) + getUri().hashCode();
    hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
    hash = (53 * hash) + getGroupId().hashCode();
    if (hasIsHirable()) {
      hash = (37 * hash) + IS_HIRABLE_FIELD_NUMBER;
      hash = (53 * hash) + getIsHirable().hashCode();
    }
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    if (hasUpdateTime()) {
      hash = (37 * hash) + UPDATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateTime().hashCode();
    }
    if (hasCandidateUpdateTime()) {
      hash = (37 * hash) + CANDIDATE_UPDATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCandidateUpdateTime().hashCode();
    }
    if (hasResumeUpdateTime()) {
      hash = (37 * hash) + RESUME_UPDATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getResumeUpdateTime().hashCode();
    }
    if (hasResume()) {
      hash = (37 * hash) + RESUME_FIELD_NUMBER;
      hash = (53 * hash) + getResume().hashCode();
    }
    if (getPersonNamesCount() > 0) {
      hash = (37 * hash) + PERSON_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getPersonNamesList().hashCode();
    }
    if (getAddressesCount() > 0) {
      hash = (37 * hash) + ADDRESSES_FIELD_NUMBER;
      hash = (53 * hash) + getAddressesList().hashCode();
    }
    if (getEmailAddressesCount() > 0) {
      hash = (37 * hash) + EMAIL_ADDRESSES_FIELD_NUMBER;
      hash = (53 * hash) + getEmailAddressesList().hashCode();
    }
    if (getPhoneNumbersCount() > 0) {
      hash = (37 * hash) + PHONE_NUMBERS_FIELD_NUMBER;
      hash = (53 * hash) + getPhoneNumbersList().hashCode();
    }
    if (getPersonalUrisCount() > 0) {
      hash = (37 * hash) + PERSONAL_URIS_FIELD_NUMBER;
      hash = (53 * hash) + getPersonalUrisList().hashCode();
    }
    if (getAdditionalContactInfoCount() > 0) {
      hash = (37 * hash) + ADDITIONAL_CONTACT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getAdditionalContactInfoList().hashCode();
    }
    if (getEmploymentRecordsCount() > 0) {
      hash = (37 * hash) + EMPLOYMENT_RECORDS_FIELD_NUMBER;
      hash = (53 * hash) + getEmploymentRecordsList().hashCode();
    }
    if (getEducationRecordsCount() > 0) {
      hash = (37 * hash) + EDUCATION_RECORDS_FIELD_NUMBER;
      hash = (53 * hash) + getEducationRecordsList().hashCode();
    }
    if (getSkillsCount() > 0) {
      hash = (37 * hash) + SKILLS_FIELD_NUMBER;
      hash = (53 * hash) + getSkillsList().hashCode();
    }
    if (getActivitiesCount() > 0) {
      hash = (37 * hash) + ACTIVITIES_FIELD_NUMBER;
      hash = (53 * hash) + getActivitiesList().hashCode();
    }
    if (getPublicationsCount() > 0) {
      hash = (37 * hash) + PUBLICATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getPublicationsList().hashCode();
    }
    if (getPatentsCount() > 0) {
      hash = (37 * hash) + PATENTS_FIELD_NUMBER;
      hash = (53 * hash) + getPatentsList().hashCode();
    }
    if (getCertificationsCount() > 0) {
      hash = (37 * hash) + CERTIFICATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getCertificationsList().hashCode();
    }
    if (getApplicationsCount() > 0) {
      hash = (37 * hash) + APPLICATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getApplicationsList().hashCode();
    }
    if (getAssignmentsCount() > 0) {
      hash = (37 * hash) + ASSIGNMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getAssignmentsList().hashCode();
    }
    if (!internalGetCustomAttributes().getMap().isEmpty()) {
      hash = (37 * hash) + CUSTOM_ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetCustomAttributes().hashCode();
    }
    hash = (37 * hash) + PROCESSED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getProcessed());
    hash = (37 * hash) + KEYWORD_SNIPPET_FIELD_NUMBER;
    hash = (53 * hash) + getKeywordSnippet().hashCode();
    if (getAvailabilitySignalsCount() > 0) {
      hash = (37 * hash) + AVAILABILITY_SIGNALS_FIELD_NUMBER;
      hash = (53 * hash) + getAvailabilitySignalsList().hashCode();
    }
    if (getDerivedAddressesCount() > 0) {
      hash = (37 * hash) + DERIVED_ADDRESSES_FIELD_NUMBER;
      hash = (53 * hash) + getDerivedAddressesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.talent.v4beta1.Profile parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.talent.v4beta1.Profile prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A resource that represents the profile for a job candidate (also referred to
   * as a "single-source profile").
   * </pre>
   *
   * Protobuf type {@code google.cloud.talent.v4beta1.Profile}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.talent.v4beta1.Profile)
      com.google.cloud.talent.v4beta1.ProfileOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.talent.v4beta1.ProfileResourceProto.internal_static_google_cloud_talent_v4beta1_Profile_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 26:
          return internalGetCustomAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 26:
          return internalGetMutableCustomAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.talent.v4beta1.ProfileResourceProto.internal_static_google_cloud_talent_v4beta1_Profile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.talent.v4beta1.Profile.class, com.google.cloud.talent.v4beta1.Profile.Builder.class);
    }

    // Construct using com.google.cloud.talent.v4beta1.Profile.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPersonNamesFieldBuilder();
        getAddressesFieldBuilder();
        getEmailAddressesFieldBuilder();
        getPhoneNumbersFieldBuilder();
        getPersonalUrisFieldBuilder();
        getAdditionalContactInfoFieldBuilder();
        getEmploymentRecordsFieldBuilder();
        getEducationRecordsFieldBuilder();
        getSkillsFieldBuilder();
        getActivitiesFieldBuilder();
        getPublicationsFieldBuilder();
        getPatentsFieldBuilder();
        getCertificationsFieldBuilder();
        getAvailabilitySignalsFieldBuilder();
        getDerivedAddressesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      externalId_ = "";

      source_ = "";

      uri_ = "";

      groupId_ = "";

      if (isHirableBuilder_ == null) {
        isHirable_ = null;
      } else {
        isHirable_ = null;
        isHirableBuilder_ = null;
      }
      if (createTimeBuilder_ == null) {
        createTime_ = null;
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }
      if (updateTimeBuilder_ == null) {
        updateTime_ = null;
      } else {
        updateTime_ = null;
        updateTimeBuilder_ = null;
      }
      if (candidateUpdateTimeBuilder_ == null) {
        candidateUpdateTime_ = null;
      } else {
        candidateUpdateTime_ = null;
        candidateUpdateTimeBuilder_ = null;
      }
      if (resumeUpdateTimeBuilder_ == null) {
        resumeUpdateTime_ = null;
      } else {
        resumeUpdateTime_ = null;
        resumeUpdateTimeBuilder_ = null;
      }
      if (resumeBuilder_ == null) {
        resume_ = null;
      } else {
        resume_ = null;
        resumeBuilder_ = null;
      }
      if (personNamesBuilder_ == null) {
        personNames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        personNamesBuilder_.clear();
      }
      if (addressesBuilder_ == null) {
        addresses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        addressesBuilder_.clear();
      }
      if (emailAddressesBuilder_ == null) {
        emailAddresses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        emailAddressesBuilder_.clear();
      }
      if (phoneNumbersBuilder_ == null) {
        phoneNumbers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        phoneNumbersBuilder_.clear();
      }
      if (personalUrisBuilder_ == null) {
        personalUris_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        personalUrisBuilder_.clear();
      }
      if (additionalContactInfoBuilder_ == null) {
        additionalContactInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        additionalContactInfoBuilder_.clear();
      }
      if (employmentRecordsBuilder_ == null) {
        employmentRecords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        employmentRecordsBuilder_.clear();
      }
      if (educationRecordsBuilder_ == null) {
        educationRecords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        educationRecordsBuilder_.clear();
      }
      if (skillsBuilder_ == null) {
        skills_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        skillsBuilder_.clear();
      }
      if (activitiesBuilder_ == null) {
        activities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
      } else {
        activitiesBuilder_.clear();
      }
      if (publicationsBuilder_ == null) {
        publications_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
      } else {
        publicationsBuilder_.clear();
      }
      if (patentsBuilder_ == null) {
        patents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
      } else {
        patentsBuilder_.clear();
      }
      if (certificationsBuilder_ == null) {
        certifications_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        certificationsBuilder_.clear();
      }
      applications_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00002000);
      assignments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00004000);
      internalGetMutableCustomAttributes().clear();
      processed_ = false;

      keywordSnippet_ = "";

      if (availabilitySignalsBuilder_ == null) {
        availabilitySignals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
      } else {
        availabilitySignalsBuilder_.clear();
      }
      if (derivedAddressesBuilder_ == null) {
        derivedAddresses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
      } else {
        derivedAddressesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.talent.v4beta1.ProfileResourceProto.internal_static_google_cloud_talent_v4beta1_Profile_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.talent.v4beta1.Profile getDefaultInstanceForType() {
      return com.google.cloud.talent.v4beta1.Profile.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.talent.v4beta1.Profile build() {
      com.google.cloud.talent.v4beta1.Profile result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.talent.v4beta1.Profile buildPartial() {
      com.google.cloud.talent.v4beta1.Profile result = new com.google.cloud.talent.v4beta1.Profile(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      result.externalId_ = externalId_;
      result.source_ = source_;
      result.uri_ = uri_;
      result.groupId_ = groupId_;
      if (isHirableBuilder_ == null) {
        result.isHirable_ = isHirable_;
      } else {
        result.isHirable_ = isHirableBuilder_.build();
      }
      if (createTimeBuilder_ == null) {
        result.createTime_ = createTime_;
      } else {
        result.createTime_ = createTimeBuilder_.build();
      }
      if (updateTimeBuilder_ == null) {
        result.updateTime_ = updateTime_;
      } else {
        result.updateTime_ = updateTimeBuilder_.build();
      }
      if (candidateUpdateTimeBuilder_ == null) {
        result.candidateUpdateTime_ = candidateUpdateTime_;
      } else {
        result.candidateUpdateTime_ = candidateUpdateTimeBuilder_.build();
      }
      if (resumeUpdateTimeBuilder_ == null) {
        result.resumeUpdateTime_ = resumeUpdateTime_;
      } else {
        result.resumeUpdateTime_ = resumeUpdateTimeBuilder_.build();
      }
      if (resumeBuilder_ == null) {
        result.resume_ = resume_;
      } else {
        result.resume_ = resumeBuilder_.build();
      }
      if (personNamesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          personNames_ = java.util.Collections.unmodifiableList(personNames_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.personNames_ = personNames_;
      } else {
        result.personNames_ = personNamesBuilder_.build();
      }
      if (addressesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          addresses_ = java.util.Collections.unmodifiableList(addresses_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.addresses_ = addresses_;
      } else {
        result.addresses_ = addressesBuilder_.build();
      }
      if (emailAddressesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          emailAddresses_ = java.util.Collections.unmodifiableList(emailAddresses_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.emailAddresses_ = emailAddresses_;
      } else {
        result.emailAddresses_ = emailAddressesBuilder_.build();
      }
      if (phoneNumbersBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          phoneNumbers_ = java.util.Collections.unmodifiableList(phoneNumbers_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.phoneNumbers_ = phoneNumbers_;
      } else {
        result.phoneNumbers_ = phoneNumbersBuilder_.build();
      }
      if (personalUrisBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          personalUris_ = java.util.Collections.unmodifiableList(personalUris_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.personalUris_ = personalUris_;
      } else {
        result.personalUris_ = personalUrisBuilder_.build();
      }
      if (additionalContactInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          additionalContactInfo_ = java.util.Collections.unmodifiableList(additionalContactInfo_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.additionalContactInfo_ = additionalContactInfo_;
      } else {
        result.additionalContactInfo_ = additionalContactInfoBuilder_.build();
      }
      if (employmentRecordsBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          employmentRecords_ = java.util.Collections.unmodifiableList(employmentRecords_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.employmentRecords_ = employmentRecords_;
      } else {
        result.employmentRecords_ = employmentRecordsBuilder_.build();
      }
      if (educationRecordsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          educationRecords_ = java.util.Collections.unmodifiableList(educationRecords_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.educationRecords_ = educationRecords_;
      } else {
        result.educationRecords_ = educationRecordsBuilder_.build();
      }
      if (skillsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          skills_ = java.util.Collections.unmodifiableList(skills_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.skills_ = skills_;
      } else {
        result.skills_ = skillsBuilder_.build();
      }
      if (activitiesBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          activities_ = java.util.Collections.unmodifiableList(activities_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.activities_ = activities_;
      } else {
        result.activities_ = activitiesBuilder_.build();
      }
      if (publicationsBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          publications_ = java.util.Collections.unmodifiableList(publications_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.publications_ = publications_;
      } else {
        result.publications_ = publicationsBuilder_.build();
      }
      if (patentsBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)) {
          patents_ = java.util.Collections.unmodifiableList(patents_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.patents_ = patents_;
      } else {
        result.patents_ = patentsBuilder_.build();
      }
      if (certificationsBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)) {
          certifications_ = java.util.Collections.unmodifiableList(certifications_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.certifications_ = certifications_;
      } else {
        result.certifications_ = certificationsBuilder_.build();
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        applications_ = applications_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00002000);
      }
      result.applications_ = applications_;
      if (((bitField0_ & 0x00004000) != 0)) {
        assignments_ = assignments_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00004000);
      }
      result.assignments_ = assignments_;
      result.customAttributes_ = internalGetCustomAttributes();
      result.customAttributes_.makeImmutable();
      result.processed_ = processed_;
      result.keywordSnippet_ = keywordSnippet_;
      if (availabilitySignalsBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0)) {
          availabilitySignals_ = java.util.Collections.unmodifiableList(availabilitySignals_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.availabilitySignals_ = availabilitySignals_;
      } else {
        result.availabilitySignals_ = availabilitySignalsBuilder_.build();
      }
      if (derivedAddressesBuilder_ == null) {
        if (((bitField0_ & 0x00020000) != 0)) {
          derivedAddresses_ = java.util.Collections.unmodifiableList(derivedAddresses_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.derivedAddresses_ = derivedAddresses_;
      } else {
        result.derivedAddresses_ = derivedAddressesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.talent.v4beta1.Profile) {
        return mergeFrom((com.google.cloud.talent.v4beta1.Profile)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.talent.v4beta1.Profile other) {
      if (other == com.google.cloud.talent.v4beta1.Profile.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getExternalId().isEmpty()) {
        externalId_ = other.externalId_;
        onChanged();
      }
      if (!other.getSource().isEmpty()) {
        source_ = other.source_;
        onChanged();
      }
      if (!other.getUri().isEmpty()) {
        uri_ = other.uri_;
        onChanged();
      }
      if (!other.getGroupId().isEmpty()) {
        groupId_ = other.groupId_;
        onChanged();
      }
      if (other.hasIsHirable()) {
        mergeIsHirable(other.getIsHirable());
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (other.hasUpdateTime()) {
        mergeUpdateTime(other.getUpdateTime());
      }
      if (other.hasCandidateUpdateTime()) {
        mergeCandidateUpdateTime(other.getCandidateUpdateTime());
      }
      if (other.hasResumeUpdateTime()) {
        mergeResumeUpdateTime(other.getResumeUpdateTime());
      }
      if (other.hasResume()) {
        mergeResume(other.getResume());
      }
      if (personNamesBuilder_ == null) {
        if (!other.personNames_.isEmpty()) {
          if (personNames_.isEmpty()) {
            personNames_ = other.personNames_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePersonNamesIsMutable();
            personNames_.addAll(other.personNames_);
          }
          onChanged();
        }
      } else {
        if (!other.personNames_.isEmpty()) {
          if (personNamesBuilder_.isEmpty()) {
            personNamesBuilder_.dispose();
            personNamesBuilder_ = null;
            personNames_ = other.personNames_;
            bitField0_ = (bitField0_ & ~0x00000001);
            personNamesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPersonNamesFieldBuilder() : null;
          } else {
            personNamesBuilder_.addAllMessages(other.personNames_);
          }
        }
      }
      if (addressesBuilder_ == null) {
        if (!other.addresses_.isEmpty()) {
          if (addresses_.isEmpty()) {
            addresses_ = other.addresses_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAddressesIsMutable();
            addresses_.addAll(other.addresses_);
          }
          onChanged();
        }
      } else {
        if (!other.addresses_.isEmpty()) {
          if (addressesBuilder_.isEmpty()) {
            addressesBuilder_.dispose();
            addressesBuilder_ = null;
            addresses_ = other.addresses_;
            bitField0_ = (bitField0_ & ~0x00000002);
            addressesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAddressesFieldBuilder() : null;
          } else {
            addressesBuilder_.addAllMessages(other.addresses_);
          }
        }
      }
      if (emailAddressesBuilder_ == null) {
        if (!other.emailAddresses_.isEmpty()) {
          if (emailAddresses_.isEmpty()) {
            emailAddresses_ = other.emailAddresses_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEmailAddressesIsMutable();
            emailAddresses_.addAll(other.emailAddresses_);
          }
          onChanged();
        }
      } else {
        if (!other.emailAddresses_.isEmpty()) {
          if (emailAddressesBuilder_.isEmpty()) {
            emailAddressesBuilder_.dispose();
            emailAddressesBuilder_ = null;
            emailAddresses_ = other.emailAddresses_;
            bitField0_ = (bitField0_ & ~0x00000004);
            emailAddressesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEmailAddressesFieldBuilder() : null;
          } else {
            emailAddressesBuilder_.addAllMessages(other.emailAddresses_);
          }
        }
      }
      if (phoneNumbersBuilder_ == null) {
        if (!other.phoneNumbers_.isEmpty()) {
          if (phoneNumbers_.isEmpty()) {
            phoneNumbers_ = other.phoneNumbers_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePhoneNumbersIsMutable();
            phoneNumbers_.addAll(other.phoneNumbers_);
          }
          onChanged();
        }
      } else {
        if (!other.phoneNumbers_.isEmpty()) {
          if (phoneNumbersBuilder_.isEmpty()) {
            phoneNumbersBuilder_.dispose();
            phoneNumbersBuilder_ = null;
            phoneNumbers_ = other.phoneNumbers_;
            bitField0_ = (bitField0_ & ~0x00000008);
            phoneNumbersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPhoneNumbersFieldBuilder() : null;
          } else {
            phoneNumbersBuilder_.addAllMessages(other.phoneNumbers_);
          }
        }
      }
      if (personalUrisBuilder_ == null) {
        if (!other.personalUris_.isEmpty()) {
          if (personalUris_.isEmpty()) {
            personalUris_ = other.personalUris_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensurePersonalUrisIsMutable();
            personalUris_.addAll(other.personalUris_);
          }
          onChanged();
        }
      } else {
        if (!other.personalUris_.isEmpty()) {
          if (personalUrisBuilder_.isEmpty()) {
            personalUrisBuilder_.dispose();
            personalUrisBuilder_ = null;
            personalUris_ = other.personalUris_;
            bitField0_ = (bitField0_ & ~0x00000010);
            personalUrisBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPersonalUrisFieldBuilder() : null;
          } else {
            personalUrisBuilder_.addAllMessages(other.personalUris_);
          }
        }
      }
      if (additionalContactInfoBuilder_ == null) {
        if (!other.additionalContactInfo_.isEmpty()) {
          if (additionalContactInfo_.isEmpty()) {
            additionalContactInfo_ = other.additionalContactInfo_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureAdditionalContactInfoIsMutable();
            additionalContactInfo_.addAll(other.additionalContactInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.additionalContactInfo_.isEmpty()) {
          if (additionalContactInfoBuilder_.isEmpty()) {
            additionalContactInfoBuilder_.dispose();
            additionalContactInfoBuilder_ = null;
            additionalContactInfo_ = other.additionalContactInfo_;
            bitField0_ = (bitField0_ & ~0x00000020);
            additionalContactInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAdditionalContactInfoFieldBuilder() : null;
          } else {
            additionalContactInfoBuilder_.addAllMessages(other.additionalContactInfo_);
          }
        }
      }
      if (employmentRecordsBuilder_ == null) {
        if (!other.employmentRecords_.isEmpty()) {
          if (employmentRecords_.isEmpty()) {
            employmentRecords_ = other.employmentRecords_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureEmploymentRecordsIsMutable();
            employmentRecords_.addAll(other.employmentRecords_);
          }
          onChanged();
        }
      } else {
        if (!other.employmentRecords_.isEmpty()) {
          if (employmentRecordsBuilder_.isEmpty()) {
            employmentRecordsBuilder_.dispose();
            employmentRecordsBuilder_ = null;
            employmentRecords_ = other.employmentRecords_;
            bitField0_ = (bitField0_ & ~0x00000040);
            employmentRecordsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEmploymentRecordsFieldBuilder() : null;
          } else {
            employmentRecordsBuilder_.addAllMessages(other.employmentRecords_);
          }
        }
      }
      if (educationRecordsBuilder_ == null) {
        if (!other.educationRecords_.isEmpty()) {
          if (educationRecords_.isEmpty()) {
            educationRecords_ = other.educationRecords_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureEducationRecordsIsMutable();
            educationRecords_.addAll(other.educationRecords_);
          }
          onChanged();
        }
      } else {
        if (!other.educationRecords_.isEmpty()) {
          if (educationRecordsBuilder_.isEmpty()) {
            educationRecordsBuilder_.dispose();
            educationRecordsBuilder_ = null;
            educationRecords_ = other.educationRecords_;
            bitField0_ = (bitField0_ & ~0x00000080);
            educationRecordsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEducationRecordsFieldBuilder() : null;
          } else {
            educationRecordsBuilder_.addAllMessages(other.educationRecords_);
          }
        }
      }
      if (skillsBuilder_ == null) {
        if (!other.skills_.isEmpty()) {
          if (skills_.isEmpty()) {
            skills_ = other.skills_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureSkillsIsMutable();
            skills_.addAll(other.skills_);
          }
          onChanged();
        }
      } else {
        if (!other.skills_.isEmpty()) {
          if (skillsBuilder_.isEmpty()) {
            skillsBuilder_.dispose();
            skillsBuilder_ = null;
            skills_ = other.skills_;
            bitField0_ = (bitField0_ & ~0x00000100);
            skillsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSkillsFieldBuilder() : null;
          } else {
            skillsBuilder_.addAllMessages(other.skills_);
          }
        }
      }
      if (activitiesBuilder_ == null) {
        if (!other.activities_.isEmpty()) {
          if (activities_.isEmpty()) {
            activities_ = other.activities_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureActivitiesIsMutable();
            activities_.addAll(other.activities_);
          }
          onChanged();
        }
      } else {
        if (!other.activities_.isEmpty()) {
          if (activitiesBuilder_.isEmpty()) {
            activitiesBuilder_.dispose();
            activitiesBuilder_ = null;
            activities_ = other.activities_;
            bitField0_ = (bitField0_ & ~0x00000200);
            activitiesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getActivitiesFieldBuilder() : null;
          } else {
            activitiesBuilder_.addAllMessages(other.activities_);
          }
        }
      }
      if (publicationsBuilder_ == null) {
        if (!other.publications_.isEmpty()) {
          if (publications_.isEmpty()) {
            publications_ = other.publications_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensurePublicationsIsMutable();
            publications_.addAll(other.publications_);
          }
          onChanged();
        }
      } else {
        if (!other.publications_.isEmpty()) {
          if (publicationsBuilder_.isEmpty()) {
            publicationsBuilder_.dispose();
            publicationsBuilder_ = null;
            publications_ = other.publications_;
            bitField0_ = (bitField0_ & ~0x00000400);
            publicationsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPublicationsFieldBuilder() : null;
          } else {
            publicationsBuilder_.addAllMessages(other.publications_);
          }
        }
      }
      if (patentsBuilder_ == null) {
        if (!other.patents_.isEmpty()) {
          if (patents_.isEmpty()) {
            patents_ = other.patents_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensurePatentsIsMutable();
            patents_.addAll(other.patents_);
          }
          onChanged();
        }
      } else {
        if (!other.patents_.isEmpty()) {
          if (patentsBuilder_.isEmpty()) {
            patentsBuilder_.dispose();
            patentsBuilder_ = null;
            patents_ = other.patents_;
            bitField0_ = (bitField0_ & ~0x00000800);
            patentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPatentsFieldBuilder() : null;
          } else {
            patentsBuilder_.addAllMessages(other.patents_);
          }
        }
      }
      if (certificationsBuilder_ == null) {
        if (!other.certifications_.isEmpty()) {
          if (certifications_.isEmpty()) {
            certifications_ = other.certifications_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureCertificationsIsMutable();
            certifications_.addAll(other.certifications_);
          }
          onChanged();
        }
      } else {
        if (!other.certifications_.isEmpty()) {
          if (certificationsBuilder_.isEmpty()) {
            certificationsBuilder_.dispose();
            certificationsBuilder_ = null;
            certifications_ = other.certifications_;
            bitField0_ = (bitField0_ & ~0x00001000);
            certificationsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCertificationsFieldBuilder() : null;
          } else {
            certificationsBuilder_.addAllMessages(other.certifications_);
          }
        }
      }
      if (!other.applications_.isEmpty()) {
        if (applications_.isEmpty()) {
          applications_ = other.applications_;
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          ensureApplicationsIsMutable();
          applications_.addAll(other.applications_);
        }
        onChanged();
      }
      if (!other.assignments_.isEmpty()) {
        if (assignments_.isEmpty()) {
          assignments_ = other.assignments_;
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          ensureAssignmentsIsMutable();
          assignments_.addAll(other.assignments_);
        }
        onChanged();
      }
      internalGetMutableCustomAttributes().mergeFrom(
          other.internalGetCustomAttributes());
      if (other.getProcessed() != false) {
        setProcessed(other.getProcessed());
      }
      if (!other.getKeywordSnippet().isEmpty()) {
        keywordSnippet_ = other.keywordSnippet_;
        onChanged();
      }
      if (availabilitySignalsBuilder_ == null) {
        if (!other.availabilitySignals_.isEmpty()) {
          if (availabilitySignals_.isEmpty()) {
            availabilitySignals_ = other.availabilitySignals_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureAvailabilitySignalsIsMutable();
            availabilitySignals_.addAll(other.availabilitySignals_);
          }
          onChanged();
        }
      } else {
        if (!other.availabilitySignals_.isEmpty()) {
          if (availabilitySignalsBuilder_.isEmpty()) {
            availabilitySignalsBuilder_.dispose();
            availabilitySignalsBuilder_ = null;
            availabilitySignals_ = other.availabilitySignals_;
            bitField0_ = (bitField0_ & ~0x00010000);
            availabilitySignalsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAvailabilitySignalsFieldBuilder() : null;
          } else {
            availabilitySignalsBuilder_.addAllMessages(other.availabilitySignals_);
          }
        }
      }
      if (derivedAddressesBuilder_ == null) {
        if (!other.derivedAddresses_.isEmpty()) {
          if (derivedAddresses_.isEmpty()) {
            derivedAddresses_ = other.derivedAddresses_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureDerivedAddressesIsMutable();
            derivedAddresses_.addAll(other.derivedAddresses_);
          }
          onChanged();
        }
      } else {
        if (!other.derivedAddresses_.isEmpty()) {
          if (derivedAddressesBuilder_.isEmpty()) {
            derivedAddressesBuilder_.dispose();
            derivedAddressesBuilder_ = null;
            derivedAddresses_ = other.derivedAddresses_;
            bitField0_ = (bitField0_ & ~0x00020000);
            derivedAddressesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDerivedAddressesFieldBuilder() : null;
          } else {
            derivedAddressesBuilder_.addAllMessages(other.derivedAddresses_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.talent.v4beta1.Profile parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.talent.v4beta1.Profile) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Required during profile update.
     * Resource name assigned to a profile by the API.
     * The format is
     * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
     * for example, "projects/foo/tenants/bar/profiles/baz".
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required during profile update.
     * Resource name assigned to a profile by the API.
     * The format is
     * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
     * for example, "projects/foo/tenants/bar/profiles/baz".
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required during profile update.
     * Resource name assigned to a profile by the API.
     * The format is
     * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
     * for example, "projects/foo/tenants/bar/profiles/baz".
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required during profile update.
     * Resource name assigned to a profile by the API.
     * The format is
     * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
     * for example, "projects/foo/tenants/bar/profiles/baz".
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required during profile update.
     * Resource name assigned to a profile by the API.
     * The format is
     * "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
     * for example, "projects/foo/tenants/bar/profiles/baz".
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object externalId_ = "";
    /**
     * <pre>
     * Profile's id in client system, if available. This value is unique for each
     * profile inside a tenant. An error is thrown if another profile with the
     * same external_id is created.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string external_id = 2;</code>
     * @return The externalId.
     */
    public java.lang.String getExternalId() {
      java.lang.Object ref = externalId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        externalId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Profile's id in client system, if available. This value is unique for each
     * profile inside a tenant. An error is thrown if another profile with the
     * same external_id is created.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string external_id = 2;</code>
     * @return The bytes for externalId.
     */
    public com.google.protobuf.ByteString
        getExternalIdBytes() {
      java.lang.Object ref = externalId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        externalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Profile's id in client system, if available. This value is unique for each
     * profile inside a tenant. An error is thrown if another profile with the
     * same external_id is created.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string external_id = 2;</code>
     * @param value The externalId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      externalId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Profile's id in client system, if available. This value is unique for each
     * profile inside a tenant. An error is thrown if another profile with the
     * same external_id is created.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string external_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearExternalId() {
      
      externalId_ = getDefaultInstance().getExternalId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Profile's id in client system, if available. This value is unique for each
     * profile inside a tenant. An error is thrown if another profile with the
     * same external_id is created.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string external_id = 2;</code>
     * @param value The bytes for externalId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      externalId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object source_ = "";
    /**
     * <pre>
     * The source description indicating where the profile is acquired.
     * For example, if a candidate profile is acquired from a resume, the user can
     * input "resume" here to indicate the source.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The source.
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The source description indicating where the profile is acquired.
     * For example, if a candidate profile is acquired from a resume, the user can
     * input "resume" here to indicate the source.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The bytes for source.
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The source description indicating where the profile is acquired.
     * For example, if a candidate profile is acquired from a resume, the user can
     * input "resume" here to indicate the source.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string source = 3;</code>
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      source_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The source description indicating where the profile is acquired.
     * For example, if a candidate profile is acquired from a resume, the user can
     * input "resume" here to indicate the source.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSource() {
      
      source_ = getDefaultInstance().getSource();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The source description indicating where the profile is acquired.
     * For example, if a candidate profile is acquired from a resume, the user can
     * input "resume" here to indicate the source.
     * The maximum number of bytes allowed is 100.
     * </pre>
     *
     * <code>string source = 3;</code>
     * @param value The bytes for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      source_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object uri_ = "";
    /**
     * <pre>
     * The URI set by clients that links to this profile's client-side copy.
     * The maximum number of bytes allowed is 4000.
     * </pre>
     *
     * <code>string uri = 4;</code>
     * @return The uri.
     */
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The URI set by clients that links to this profile's client-side copy.
     * The maximum number of bytes allowed is 4000.
     * </pre>
     *
     * <code>string uri = 4;</code>
     * @return The bytes for uri.
     */
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The URI set by clients that links to this profile's client-side copy.
     * The maximum number of bytes allowed is 4000.
     * </pre>
     *
     * <code>string uri = 4;</code>
     * @param value The uri to set.
     * @return This builder for chaining.
     */
    public Builder setUri(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      uri_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URI set by clients that links to this profile's client-side copy.
     * The maximum number of bytes allowed is 4000.
     * </pre>
     *
     * <code>string uri = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearUri() {
      
      uri_ = getDefaultInstance().getUri();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URI set by clients that links to this profile's client-side copy.
     * The maximum number of bytes allowed is 4000.
     * </pre>
     *
     * <code>string uri = 4;</code>
     * @param value The bytes for uri to set.
     * @return This builder for chaining.
     */
    public Builder setUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      uri_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object groupId_ = "";
    /**
     * <pre>
     * The cluster id of the profile to associate with other profile(s) for the
     * same candidate.
     * This field should be generated by the customer. If a value is not provided,
     * a random UUID is assigned to this field of the profile.
     * This is used to link multiple profiles to the same candidate. For example,
     * a client has a candidate with two profiles, where one was created recently
     * and the other one was created 5 years ago. These two profiles may be very
     * different. The clients can create the first profile and get a generated
     * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
     * indicating these two profiles are referring to the same candidate.
     * </pre>
     *
     * <code>string group_id = 5;</code>
     * @return The groupId.
     */
    public java.lang.String getGroupId() {
      java.lang.Object ref = groupId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The cluster id of the profile to associate with other profile(s) for the
     * same candidate.
     * This field should be generated by the customer. If a value is not provided,
     * a random UUID is assigned to this field of the profile.
     * This is used to link multiple profiles to the same candidate. For example,
     * a client has a candidate with two profiles, where one was created recently
     * and the other one was created 5 years ago. These two profiles may be very
     * different. The clients can create the first profile and get a generated
     * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
     * indicating these two profiles are referring to the same candidate.
     * </pre>
     *
     * <code>string group_id = 5;</code>
     * @return The bytes for groupId.
     */
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      java.lang.Object ref = groupId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The cluster id of the profile to associate with other profile(s) for the
     * same candidate.
     * This field should be generated by the customer. If a value is not provided,
     * a random UUID is assigned to this field of the profile.
     * This is used to link multiple profiles to the same candidate. For example,
     * a client has a candidate with two profiles, where one was created recently
     * and the other one was created 5 years ago. These two profiles may be very
     * different. The clients can create the first profile and get a generated
     * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
     * indicating these two profiles are referring to the same candidate.
     * </pre>
     *
     * <code>string group_id = 5;</code>
     * @param value The groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      groupId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cluster id of the profile to associate with other profile(s) for the
     * same candidate.
     * This field should be generated by the customer. If a value is not provided,
     * a random UUID is assigned to this field of the profile.
     * This is used to link multiple profiles to the same candidate. For example,
     * a client has a candidate with two profiles, where one was created recently
     * and the other one was created 5 years ago. These two profiles may be very
     * different. The clients can create the first profile and get a generated
     * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
     * indicating these two profiles are referring to the same candidate.
     * </pre>
     *
     * <code>string group_id = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupId() {
      
      groupId_ = getDefaultInstance().getGroupId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cluster id of the profile to associate with other profile(s) for the
     * same candidate.
     * This field should be generated by the customer. If a value is not provided,
     * a random UUID is assigned to this field of the profile.
     * This is used to link multiple profiles to the same candidate. For example,
     * a client has a candidate with two profiles, where one was created recently
     * and the other one was created 5 years ago. These two profiles may be very
     * different. The clients can create the first profile and get a generated
     * [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
     * indicating these two profiles are referring to the same candidate.
     * </pre>
     *
     * <code>string group_id = 5;</code>
     * @param value The bytes for groupId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      groupId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.BoolValue isHirable_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> isHirableBuilder_;
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     * @return Whether the isHirable field is set.
     */
    public boolean hasIsHirable() {
      return isHirableBuilder_ != null || isHirable_ != null;
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     * @return The isHirable.
     */
    public com.google.protobuf.BoolValue getIsHirable() {
      if (isHirableBuilder_ == null) {
        return isHirable_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : isHirable_;
      } else {
        return isHirableBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     */
    public Builder setIsHirable(com.google.protobuf.BoolValue value) {
      if (isHirableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        isHirable_ = value;
        onChanged();
      } else {
        isHirableBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     */
    public Builder setIsHirable(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (isHirableBuilder_ == null) {
        isHirable_ = builderForValue.build();
        onChanged();
      } else {
        isHirableBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     */
    public Builder mergeIsHirable(com.google.protobuf.BoolValue value) {
      if (isHirableBuilder_ == null) {
        if (isHirable_ != null) {
          isHirable_ =
            com.google.protobuf.BoolValue.newBuilder(isHirable_).mergeFrom(value).buildPartial();
        } else {
          isHirable_ = value;
        }
        onChanged();
      } else {
        isHirableBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     */
    public Builder clearIsHirable() {
      if (isHirableBuilder_ == null) {
        isHirable_ = null;
        onChanged();
      } else {
        isHirable_ = null;
        isHirableBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     */
    public com.google.protobuf.BoolValue.Builder getIsHirableBuilder() {
      
      onChanged();
      return getIsHirableFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getIsHirableOrBuilder() {
      if (isHirableBuilder_ != null) {
        return isHirableBuilder_.getMessageOrBuilder();
      } else {
        return isHirable_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : isHirable_;
      }
    }
    /**
     * <pre>
     * Indicates the hirable status of the candidate.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue is_hirable = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getIsHirableFieldBuilder() {
      if (isHirableBuilder_ == null) {
        isHirableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getIsHirable(),
                getParentForChildren(),
                isClean());
        isHirable_ = null;
      }
      return isHirableBuilder_;
    }

    private com.google.protobuf.Timestamp createTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     * @return Whether the createTime field is set.
     */
    public boolean hasCreateTime() {
      return createTimeBuilder_ != null || createTime_ != null;
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     * @return The createTime.
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
        onChanged();
      } else {
        createTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
        onChanged();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (createTime_ != null) {
          createTime_ =
            com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
        } else {
          createTime_ = value;
        }
        onChanged();
      } else {
        createTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     */
    public Builder clearCreateTime() {
      if (createTimeBuilder_ == null) {
        createTime_ = null;
        onChanged();
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <pre>
     * The timestamp when the profile was first created at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private com.google.protobuf.Timestamp updateTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updateTimeBuilder_;
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     * @return Whether the updateTime field is set.
     */
    public boolean hasUpdateTime() {
      return updateTimeBuilder_ != null || updateTime_ != null;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     * @return The updateTime.
     */
    public com.google.protobuf.Timestamp getUpdateTime() {
      if (updateTimeBuilder_ == null) {
        return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
      } else {
        return updateTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        updateTime_ = value;
        onChanged();
      } else {
        updateTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     */
    public Builder setUpdateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (updateTimeBuilder_ == null) {
        updateTime_ = builderForValue.build();
        onChanged();
      } else {
        updateTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     */
    public Builder mergeUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (updateTime_ != null) {
          updateTime_ =
            com.google.protobuf.Timestamp.newBuilder(updateTime_).mergeFrom(value).buildPartial();
        } else {
          updateTime_ = value;
        }
        onChanged();
      } else {
        updateTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     */
    public Builder clearUpdateTime() {
      if (updateTimeBuilder_ == null) {
        updateTime_ = null;
        onChanged();
      } else {
        updateTime_ = null;
        updateTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     */
    public com.google.protobuf.Timestamp.Builder getUpdateTimeBuilder() {
      
      onChanged();
      return getUpdateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
      if (updateTimeBuilder_ != null) {
        return updateTimeBuilder_.getMessageOrBuilder();
      } else {
        return updateTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
      }
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated at this source.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getUpdateTimeFieldBuilder() {
      if (updateTimeBuilder_ == null) {
        updateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getUpdateTime(),
                getParentForChildren(),
                isClean());
        updateTime_ = null;
      }
      return updateTimeBuilder_;
    }

    private com.google.protobuf.Timestamp candidateUpdateTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> candidateUpdateTimeBuilder_;
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     * @return Whether the candidateUpdateTime field is set.
     */
    public boolean hasCandidateUpdateTime() {
      return candidateUpdateTimeBuilder_ != null || candidateUpdateTime_ != null;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     * @return The candidateUpdateTime.
     */
    public com.google.protobuf.Timestamp getCandidateUpdateTime() {
      if (candidateUpdateTimeBuilder_ == null) {
        return candidateUpdateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : candidateUpdateTime_;
      } else {
        return candidateUpdateTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     */
    public Builder setCandidateUpdateTime(com.google.protobuf.Timestamp value) {
      if (candidateUpdateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        candidateUpdateTime_ = value;
        onChanged();
      } else {
        candidateUpdateTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     */
    public Builder setCandidateUpdateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (candidateUpdateTimeBuilder_ == null) {
        candidateUpdateTime_ = builderForValue.build();
        onChanged();
      } else {
        candidateUpdateTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     */
    public Builder mergeCandidateUpdateTime(com.google.protobuf.Timestamp value) {
      if (candidateUpdateTimeBuilder_ == null) {
        if (candidateUpdateTime_ != null) {
          candidateUpdateTime_ =
            com.google.protobuf.Timestamp.newBuilder(candidateUpdateTime_).mergeFrom(value).buildPartial();
        } else {
          candidateUpdateTime_ = value;
        }
        onChanged();
      } else {
        candidateUpdateTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     */
    public Builder clearCandidateUpdateTime() {
      if (candidateUpdateTimeBuilder_ == null) {
        candidateUpdateTime_ = null;
        onChanged();
      } else {
        candidateUpdateTime_ = null;
        candidateUpdateTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     */
    public com.google.protobuf.Timestamp.Builder getCandidateUpdateTimeBuilder() {
      
      onChanged();
      return getCandidateUpdateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCandidateUpdateTimeOrBuilder() {
      if (candidateUpdateTimeBuilder_ != null) {
        return candidateUpdateTimeBuilder_.getMessageOrBuilder();
      } else {
        return candidateUpdateTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : candidateUpdateTime_;
      }
    }
    /**
     * <pre>
     * The timestamp when the profile was last updated as a result of a direct or
     * indirect action by a candidate.
     * These actions include:
     * * Direct actions such as the candidate submitting a new resume as part of a
     * job application to the agency, using a self-service tool such as a website
     * to update their profile, and so on.
     * * Indirect actions by the candidate such as uploading a resume to a job
     * board that is collected by the agency through a feed, providing a resume to
     * a recruiter who then uploads it into the ATS, and so on.
     * * Updates made to the candidate's profile by the recruiter as a result of
     * interacting with the candidate (for example adding a skill or work
     * preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
     * excluded from this action type.
     * Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
     * [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp candidate_update_time = 67;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCandidateUpdateTimeFieldBuilder() {
      if (candidateUpdateTimeBuilder_ == null) {
        candidateUpdateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCandidateUpdateTime(),
                getParentForChildren(),
                isClean());
        candidateUpdateTime_ = null;
      }
      return candidateUpdateTimeBuilder_;
    }

    private com.google.protobuf.Timestamp resumeUpdateTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> resumeUpdateTimeBuilder_;
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     * @return Whether the resumeUpdateTime field is set.
     */
    public boolean hasResumeUpdateTime() {
      return resumeUpdateTimeBuilder_ != null || resumeUpdateTime_ != null;
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     * @return The resumeUpdateTime.
     */
    public com.google.protobuf.Timestamp getResumeUpdateTime() {
      if (resumeUpdateTimeBuilder_ == null) {
        return resumeUpdateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : resumeUpdateTime_;
      } else {
        return resumeUpdateTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     */
    public Builder setResumeUpdateTime(com.google.protobuf.Timestamp value) {
      if (resumeUpdateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resumeUpdateTime_ = value;
        onChanged();
      } else {
        resumeUpdateTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     */
    public Builder setResumeUpdateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (resumeUpdateTimeBuilder_ == null) {
        resumeUpdateTime_ = builderForValue.build();
        onChanged();
      } else {
        resumeUpdateTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     */
    public Builder mergeResumeUpdateTime(com.google.protobuf.Timestamp value) {
      if (resumeUpdateTimeBuilder_ == null) {
        if (resumeUpdateTime_ != null) {
          resumeUpdateTime_ =
            com.google.protobuf.Timestamp.newBuilder(resumeUpdateTime_).mergeFrom(value).buildPartial();
        } else {
          resumeUpdateTime_ = value;
        }
        onChanged();
      } else {
        resumeUpdateTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     */
    public Builder clearResumeUpdateTime() {
      if (resumeUpdateTimeBuilder_ == null) {
        resumeUpdateTime_ = null;
        onChanged();
      } else {
        resumeUpdateTime_ = null;
        resumeUpdateTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     */
    public com.google.protobuf.Timestamp.Builder getResumeUpdateTimeBuilder() {
      
      onChanged();
      return getResumeUpdateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getResumeUpdateTimeOrBuilder() {
      if (resumeUpdateTimeBuilder_ != null) {
        return resumeUpdateTimeBuilder_.getMessageOrBuilder();
      } else {
        return resumeUpdateTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : resumeUpdateTime_;
      }
    }
    /**
     * <pre>
     * The timestamp when the candidate's resume was added or updated on the
     * candidate's profile. Whether that resume was directly uploaded by a
     * candidate, pulled from a 3rd party job board feed, added by a recruiter,
     * and so on.
     * If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
     * the create or update calls.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp resume_update_time = 68;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getResumeUpdateTimeFieldBuilder() {
      if (resumeUpdateTimeBuilder_ == null) {
        resumeUpdateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getResumeUpdateTime(),
                getParentForChildren(),
                isClean());
        resumeUpdateTime_ = null;
      }
      return resumeUpdateTimeBuilder_;
    }

    private com.google.cloud.talent.v4beta1.Resume resume_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Resume, com.google.cloud.talent.v4beta1.Resume.Builder, com.google.cloud.talent.v4beta1.ResumeOrBuilder> resumeBuilder_;
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     * @return Whether the resume field is set.
     */
    public boolean hasResume() {
      return resumeBuilder_ != null || resume_ != null;
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     * @return The resume.
     */
    public com.google.cloud.talent.v4beta1.Resume getResume() {
      if (resumeBuilder_ == null) {
        return resume_ == null ? com.google.cloud.talent.v4beta1.Resume.getDefaultInstance() : resume_;
      } else {
        return resumeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     */
    public Builder setResume(com.google.cloud.talent.v4beta1.Resume value) {
      if (resumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resume_ = value;
        onChanged();
      } else {
        resumeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     */
    public Builder setResume(
        com.google.cloud.talent.v4beta1.Resume.Builder builderForValue) {
      if (resumeBuilder_ == null) {
        resume_ = builderForValue.build();
        onChanged();
      } else {
        resumeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     */
    public Builder mergeResume(com.google.cloud.talent.v4beta1.Resume value) {
      if (resumeBuilder_ == null) {
        if (resume_ != null) {
          resume_ =
            com.google.cloud.talent.v4beta1.Resume.newBuilder(resume_).mergeFrom(value).buildPartial();
        } else {
          resume_ = value;
        }
        onChanged();
      } else {
        resumeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     */
    public Builder clearResume() {
      if (resumeBuilder_ == null) {
        resume_ = null;
        onChanged();
      } else {
        resume_ = null;
        resumeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     */
    public com.google.cloud.talent.v4beta1.Resume.Builder getResumeBuilder() {
      
      onChanged();
      return getResumeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     */
    public com.google.cloud.talent.v4beta1.ResumeOrBuilder getResumeOrBuilder() {
      if (resumeBuilder_ != null) {
        return resumeBuilder_.getMessageOrBuilder();
      } else {
        return resume_ == null ?
            com.google.cloud.talent.v4beta1.Resume.getDefaultInstance() : resume_;
      }
    }
    /**
     * <pre>
     * The resume representing this profile.
     * </pre>
     *
     * <code>.google.cloud.talent.v4beta1.Resume resume = 53;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Resume, com.google.cloud.talent.v4beta1.Resume.Builder, com.google.cloud.talent.v4beta1.ResumeOrBuilder> 
        getResumeFieldBuilder() {
      if (resumeBuilder_ == null) {
        resumeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Resume, com.google.cloud.talent.v4beta1.Resume.Builder, com.google.cloud.talent.v4beta1.ResumeOrBuilder>(
                getResume(),
                getParentForChildren(),
                isClean());
        resume_ = null;
      }
      return resumeBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.PersonName> personNames_ =
      java.util.Collections.emptyList();
    private void ensurePersonNamesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        personNames_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.PersonName>(personNames_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.PersonName, com.google.cloud.talent.v4beta1.PersonName.Builder, com.google.cloud.talent.v4beta1.PersonNameOrBuilder> personNamesBuilder_;

    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.PersonName> getPersonNamesList() {
      if (personNamesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(personNames_);
      } else {
        return personNamesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public int getPersonNamesCount() {
      if (personNamesBuilder_ == null) {
        return personNames_.size();
      } else {
        return personNamesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonName getPersonNames(int index) {
      if (personNamesBuilder_ == null) {
        return personNames_.get(index);
      } else {
        return personNamesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder setPersonNames(
        int index, com.google.cloud.talent.v4beta1.PersonName value) {
      if (personNamesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePersonNamesIsMutable();
        personNames_.set(index, value);
        onChanged();
      } else {
        personNamesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder setPersonNames(
        int index, com.google.cloud.talent.v4beta1.PersonName.Builder builderForValue) {
      if (personNamesBuilder_ == null) {
        ensurePersonNamesIsMutable();
        personNames_.set(index, builderForValue.build());
        onChanged();
      } else {
        personNamesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder addPersonNames(com.google.cloud.talent.v4beta1.PersonName value) {
      if (personNamesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePersonNamesIsMutable();
        personNames_.add(value);
        onChanged();
      } else {
        personNamesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder addPersonNames(
        int index, com.google.cloud.talent.v4beta1.PersonName value) {
      if (personNamesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePersonNamesIsMutable();
        personNames_.add(index, value);
        onChanged();
      } else {
        personNamesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder addPersonNames(
        com.google.cloud.talent.v4beta1.PersonName.Builder builderForValue) {
      if (personNamesBuilder_ == null) {
        ensurePersonNamesIsMutable();
        personNames_.add(builderForValue.build());
        onChanged();
      } else {
        personNamesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder addPersonNames(
        int index, com.google.cloud.talent.v4beta1.PersonName.Builder builderForValue) {
      if (personNamesBuilder_ == null) {
        ensurePersonNamesIsMutable();
        personNames_.add(index, builderForValue.build());
        onChanged();
      } else {
        personNamesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder addAllPersonNames(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.PersonName> values) {
      if (personNamesBuilder_ == null) {
        ensurePersonNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, personNames_);
        onChanged();
      } else {
        personNamesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder clearPersonNames() {
      if (personNamesBuilder_ == null) {
        personNames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        personNamesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public Builder removePersonNames(int index) {
      if (personNamesBuilder_ == null) {
        ensurePersonNamesIsMutable();
        personNames_.remove(index);
        onChanged();
      } else {
        personNamesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonName.Builder getPersonNamesBuilder(
        int index) {
      return getPersonNamesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonNameOrBuilder getPersonNamesOrBuilder(
        int index) {
      if (personNamesBuilder_ == null) {
        return personNames_.get(index);  } else {
        return personNamesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.PersonNameOrBuilder> 
         getPersonNamesOrBuilderList() {
      if (personNamesBuilder_ != null) {
        return personNamesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(personNames_);
      }
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonName.Builder addPersonNamesBuilder() {
      return getPersonNamesFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.PersonName.getDefaultInstance());
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonName.Builder addPersonNamesBuilder(
        int index) {
      return getPersonNamesFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.PersonName.getDefaultInstance());
    }
    /**
     * <pre>
     * The names of the candidate this profile references.
     * Currently only one person name is supported.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonName person_names = 11;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.PersonName.Builder> 
         getPersonNamesBuilderList() {
      return getPersonNamesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.PersonName, com.google.cloud.talent.v4beta1.PersonName.Builder, com.google.cloud.talent.v4beta1.PersonNameOrBuilder> 
        getPersonNamesFieldBuilder() {
      if (personNamesBuilder_ == null) {
        personNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.PersonName, com.google.cloud.talent.v4beta1.PersonName.Builder, com.google.cloud.talent.v4beta1.PersonNameOrBuilder>(
                personNames_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        personNames_ = null;
      }
      return personNamesBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Address> addresses_ =
      java.util.Collections.emptyList();
    private void ensureAddressesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        addresses_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Address>(addresses_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Address, com.google.cloud.talent.v4beta1.Address.Builder, com.google.cloud.talent.v4beta1.AddressOrBuilder> addressesBuilder_;

    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Address> getAddressesList() {
      if (addressesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(addresses_);
      } else {
        return addressesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public int getAddressesCount() {
      if (addressesBuilder_ == null) {
        return addresses_.size();
      } else {
        return addressesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public com.google.cloud.talent.v4beta1.Address getAddresses(int index) {
      if (addressesBuilder_ == null) {
        return addresses_.get(index);
      } else {
        return addressesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder setAddresses(
        int index, com.google.cloud.talent.v4beta1.Address value) {
      if (addressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddressesIsMutable();
        addresses_.set(index, value);
        onChanged();
      } else {
        addressesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder setAddresses(
        int index, com.google.cloud.talent.v4beta1.Address.Builder builderForValue) {
      if (addressesBuilder_ == null) {
        ensureAddressesIsMutable();
        addresses_.set(index, builderForValue.build());
        onChanged();
      } else {
        addressesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder addAddresses(com.google.cloud.talent.v4beta1.Address value) {
      if (addressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddressesIsMutable();
        addresses_.add(value);
        onChanged();
      } else {
        addressesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder addAddresses(
        int index, com.google.cloud.talent.v4beta1.Address value) {
      if (addressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAddressesIsMutable();
        addresses_.add(index, value);
        onChanged();
      } else {
        addressesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder addAddresses(
        com.google.cloud.talent.v4beta1.Address.Builder builderForValue) {
      if (addressesBuilder_ == null) {
        ensureAddressesIsMutable();
        addresses_.add(builderForValue.build());
        onChanged();
      } else {
        addressesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder addAddresses(
        int index, com.google.cloud.talent.v4beta1.Address.Builder builderForValue) {
      if (addressesBuilder_ == null) {
        ensureAddressesIsMutable();
        addresses_.add(index, builderForValue.build());
        onChanged();
      } else {
        addressesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder addAllAddresses(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Address> values) {
      if (addressesBuilder_ == null) {
        ensureAddressesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, addresses_);
        onChanged();
      } else {
        addressesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder clearAddresses() {
      if (addressesBuilder_ == null) {
        addresses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        addressesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public Builder removeAddresses(int index) {
      if (addressesBuilder_ == null) {
        ensureAddressesIsMutable();
        addresses_.remove(index);
        onChanged();
      } else {
        addressesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public com.google.cloud.talent.v4beta1.Address.Builder getAddressesBuilder(
        int index) {
      return getAddressesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public com.google.cloud.talent.v4beta1.AddressOrBuilder getAddressesOrBuilder(
        int index) {
      if (addressesBuilder_ == null) {
        return addresses_.get(index);  } else {
        return addressesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.AddressOrBuilder> 
         getAddressesOrBuilderList() {
      if (addressesBuilder_ != null) {
        return addressesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(addresses_);
      }
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public com.google.cloud.talent.v4beta1.Address.Builder addAddressesBuilder() {
      return getAddressesFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Address.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public com.google.cloud.talent.v4beta1.Address.Builder addAddressesBuilder(
        int index) {
      return getAddressesFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Address.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's postal addresses. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
     * PERSONAL. During a search only personal addresses are considered. If there
     * is no such address, all addresses with unspecified usage are assumed to be
     * personal.
     * * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
     * a search, only current addresses are considered. If there is no such
     * address, all addresses are assumed to be current.
     * When displaying a candidate's addresses, it is sometimes desirable to limit
     * the number of addresses shown. In these cases we recommend that you display
     * the addresses in the following order of priority:
     * 1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
     * set.
     * 3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
     * 4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
     * [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Address addresses = 12;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Address.Builder> 
         getAddressesBuilderList() {
      return getAddressesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Address, com.google.cloud.talent.v4beta1.Address.Builder, com.google.cloud.talent.v4beta1.AddressOrBuilder> 
        getAddressesFieldBuilder() {
      if (addressesBuilder_ == null) {
        addressesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Address, com.google.cloud.talent.v4beta1.Address.Builder, com.google.cloud.talent.v4beta1.AddressOrBuilder>(
                addresses_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        addresses_ = null;
      }
      return addressesBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Email> emailAddresses_ =
      java.util.Collections.emptyList();
    private void ensureEmailAddressesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        emailAddresses_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Email>(emailAddresses_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Email, com.google.cloud.talent.v4beta1.Email.Builder, com.google.cloud.talent.v4beta1.EmailOrBuilder> emailAddressesBuilder_;

    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Email> getEmailAddressesList() {
      if (emailAddressesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(emailAddresses_);
      } else {
        return emailAddressesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public int getEmailAddressesCount() {
      if (emailAddressesBuilder_ == null) {
        return emailAddresses_.size();
      } else {
        return emailAddressesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public com.google.cloud.talent.v4beta1.Email getEmailAddresses(int index) {
      if (emailAddressesBuilder_ == null) {
        return emailAddresses_.get(index);
      } else {
        return emailAddressesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder setEmailAddresses(
        int index, com.google.cloud.talent.v4beta1.Email value) {
      if (emailAddressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmailAddressesIsMutable();
        emailAddresses_.set(index, value);
        onChanged();
      } else {
        emailAddressesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder setEmailAddresses(
        int index, com.google.cloud.talent.v4beta1.Email.Builder builderForValue) {
      if (emailAddressesBuilder_ == null) {
        ensureEmailAddressesIsMutable();
        emailAddresses_.set(index, builderForValue.build());
        onChanged();
      } else {
        emailAddressesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder addEmailAddresses(com.google.cloud.talent.v4beta1.Email value) {
      if (emailAddressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmailAddressesIsMutable();
        emailAddresses_.add(value);
        onChanged();
      } else {
        emailAddressesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder addEmailAddresses(
        int index, com.google.cloud.talent.v4beta1.Email value) {
      if (emailAddressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmailAddressesIsMutable();
        emailAddresses_.add(index, value);
        onChanged();
      } else {
        emailAddressesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder addEmailAddresses(
        com.google.cloud.talent.v4beta1.Email.Builder builderForValue) {
      if (emailAddressesBuilder_ == null) {
        ensureEmailAddressesIsMutable();
        emailAddresses_.add(builderForValue.build());
        onChanged();
      } else {
        emailAddressesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder addEmailAddresses(
        int index, com.google.cloud.talent.v4beta1.Email.Builder builderForValue) {
      if (emailAddressesBuilder_ == null) {
        ensureEmailAddressesIsMutable();
        emailAddresses_.add(index, builderForValue.build());
        onChanged();
      } else {
        emailAddressesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder addAllEmailAddresses(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Email> values) {
      if (emailAddressesBuilder_ == null) {
        ensureEmailAddressesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, emailAddresses_);
        onChanged();
      } else {
        emailAddressesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder clearEmailAddresses() {
      if (emailAddressesBuilder_ == null) {
        emailAddresses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        emailAddressesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public Builder removeEmailAddresses(int index) {
      if (emailAddressesBuilder_ == null) {
        ensureEmailAddressesIsMutable();
        emailAddresses_.remove(index);
        onChanged();
      } else {
        emailAddressesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public com.google.cloud.talent.v4beta1.Email.Builder getEmailAddressesBuilder(
        int index) {
      return getEmailAddressesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public com.google.cloud.talent.v4beta1.EmailOrBuilder getEmailAddressesOrBuilder(
        int index) {
      if (emailAddressesBuilder_ == null) {
        return emailAddresses_.get(index);  } else {
        return emailAddressesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.EmailOrBuilder> 
         getEmailAddressesOrBuilderList() {
      if (emailAddressesBuilder_ != null) {
        return emailAddressesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(emailAddresses_);
      }
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public com.google.cloud.talent.v4beta1.Email.Builder addEmailAddressesBuilder() {
      return getEmailAddressesFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Email.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public com.google.cloud.talent.v4beta1.Email.Builder addEmailAddressesBuilder(
        int index) {
      return getEmailAddressesFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Email.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's email addresses.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Email email_addresses = 13;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Email.Builder> 
         getEmailAddressesBuilderList() {
      return getEmailAddressesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Email, com.google.cloud.talent.v4beta1.Email.Builder, com.google.cloud.talent.v4beta1.EmailOrBuilder> 
        getEmailAddressesFieldBuilder() {
      if (emailAddressesBuilder_ == null) {
        emailAddressesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Email, com.google.cloud.talent.v4beta1.Email.Builder, com.google.cloud.talent.v4beta1.EmailOrBuilder>(
                emailAddresses_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        emailAddresses_ = null;
      }
      return emailAddressesBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Phone> phoneNumbers_ =
      java.util.Collections.emptyList();
    private void ensurePhoneNumbersIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        phoneNumbers_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Phone>(phoneNumbers_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Phone, com.google.cloud.talent.v4beta1.Phone.Builder, com.google.cloud.talent.v4beta1.PhoneOrBuilder> phoneNumbersBuilder_;

    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Phone> getPhoneNumbersList() {
      if (phoneNumbersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(phoneNumbers_);
      } else {
        return phoneNumbersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public int getPhoneNumbersCount() {
      if (phoneNumbersBuilder_ == null) {
        return phoneNumbers_.size();
      } else {
        return phoneNumbersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public com.google.cloud.talent.v4beta1.Phone getPhoneNumbers(int index) {
      if (phoneNumbersBuilder_ == null) {
        return phoneNumbers_.get(index);
      } else {
        return phoneNumbersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder setPhoneNumbers(
        int index, com.google.cloud.talent.v4beta1.Phone value) {
      if (phoneNumbersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhoneNumbersIsMutable();
        phoneNumbers_.set(index, value);
        onChanged();
      } else {
        phoneNumbersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder setPhoneNumbers(
        int index, com.google.cloud.talent.v4beta1.Phone.Builder builderForValue) {
      if (phoneNumbersBuilder_ == null) {
        ensurePhoneNumbersIsMutable();
        phoneNumbers_.set(index, builderForValue.build());
        onChanged();
      } else {
        phoneNumbersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder addPhoneNumbers(com.google.cloud.talent.v4beta1.Phone value) {
      if (phoneNumbersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhoneNumbersIsMutable();
        phoneNumbers_.add(value);
        onChanged();
      } else {
        phoneNumbersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder addPhoneNumbers(
        int index, com.google.cloud.talent.v4beta1.Phone value) {
      if (phoneNumbersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhoneNumbersIsMutable();
        phoneNumbers_.add(index, value);
        onChanged();
      } else {
        phoneNumbersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder addPhoneNumbers(
        com.google.cloud.talent.v4beta1.Phone.Builder builderForValue) {
      if (phoneNumbersBuilder_ == null) {
        ensurePhoneNumbersIsMutable();
        phoneNumbers_.add(builderForValue.build());
        onChanged();
      } else {
        phoneNumbersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder addPhoneNumbers(
        int index, com.google.cloud.talent.v4beta1.Phone.Builder builderForValue) {
      if (phoneNumbersBuilder_ == null) {
        ensurePhoneNumbersIsMutable();
        phoneNumbers_.add(index, builderForValue.build());
        onChanged();
      } else {
        phoneNumbersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder addAllPhoneNumbers(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Phone> values) {
      if (phoneNumbersBuilder_ == null) {
        ensurePhoneNumbersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, phoneNumbers_);
        onChanged();
      } else {
        phoneNumbersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder clearPhoneNumbers() {
      if (phoneNumbersBuilder_ == null) {
        phoneNumbers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        phoneNumbersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public Builder removePhoneNumbers(int index) {
      if (phoneNumbersBuilder_ == null) {
        ensurePhoneNumbersIsMutable();
        phoneNumbers_.remove(index);
        onChanged();
      } else {
        phoneNumbersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public com.google.cloud.talent.v4beta1.Phone.Builder getPhoneNumbersBuilder(
        int index) {
      return getPhoneNumbersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public com.google.cloud.talent.v4beta1.PhoneOrBuilder getPhoneNumbersOrBuilder(
        int index) {
      if (phoneNumbersBuilder_ == null) {
        return phoneNumbers_.get(index);  } else {
        return phoneNumbersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.PhoneOrBuilder> 
         getPhoneNumbersOrBuilderList() {
      if (phoneNumbersBuilder_ != null) {
        return phoneNumbersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(phoneNumbers_);
      }
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public com.google.cloud.talent.v4beta1.Phone.Builder addPhoneNumbersBuilder() {
      return getPhoneNumbersFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Phone.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public com.google.cloud.talent.v4beta1.Phone.Builder addPhoneNumbersBuilder(
        int index) {
      return getPhoneNumbersFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Phone.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's phone number(s).
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Phone phone_numbers = 14;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Phone.Builder> 
         getPhoneNumbersBuilderList() {
      return getPhoneNumbersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Phone, com.google.cloud.talent.v4beta1.Phone.Builder, com.google.cloud.talent.v4beta1.PhoneOrBuilder> 
        getPhoneNumbersFieldBuilder() {
      if (phoneNumbersBuilder_ == null) {
        phoneNumbersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Phone, com.google.cloud.talent.v4beta1.Phone.Builder, com.google.cloud.talent.v4beta1.PhoneOrBuilder>(
                phoneNumbers_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        phoneNumbers_ = null;
      }
      return phoneNumbersBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.PersonalUri> personalUris_ =
      java.util.Collections.emptyList();
    private void ensurePersonalUrisIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        personalUris_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.PersonalUri>(personalUris_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.PersonalUri, com.google.cloud.talent.v4beta1.PersonalUri.Builder, com.google.cloud.talent.v4beta1.PersonalUriOrBuilder> personalUrisBuilder_;

    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.PersonalUri> getPersonalUrisList() {
      if (personalUrisBuilder_ == null) {
        return java.util.Collections.unmodifiableList(personalUris_);
      } else {
        return personalUrisBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public int getPersonalUrisCount() {
      if (personalUrisBuilder_ == null) {
        return personalUris_.size();
      } else {
        return personalUrisBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonalUri getPersonalUris(int index) {
      if (personalUrisBuilder_ == null) {
        return personalUris_.get(index);
      } else {
        return personalUrisBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder setPersonalUris(
        int index, com.google.cloud.talent.v4beta1.PersonalUri value) {
      if (personalUrisBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePersonalUrisIsMutable();
        personalUris_.set(index, value);
        onChanged();
      } else {
        personalUrisBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder setPersonalUris(
        int index, com.google.cloud.talent.v4beta1.PersonalUri.Builder builderForValue) {
      if (personalUrisBuilder_ == null) {
        ensurePersonalUrisIsMutable();
        personalUris_.set(index, builderForValue.build());
        onChanged();
      } else {
        personalUrisBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder addPersonalUris(com.google.cloud.talent.v4beta1.PersonalUri value) {
      if (personalUrisBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePersonalUrisIsMutable();
        personalUris_.add(value);
        onChanged();
      } else {
        personalUrisBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder addPersonalUris(
        int index, com.google.cloud.talent.v4beta1.PersonalUri value) {
      if (personalUrisBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePersonalUrisIsMutable();
        personalUris_.add(index, value);
        onChanged();
      } else {
        personalUrisBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder addPersonalUris(
        com.google.cloud.talent.v4beta1.PersonalUri.Builder builderForValue) {
      if (personalUrisBuilder_ == null) {
        ensurePersonalUrisIsMutable();
        personalUris_.add(builderForValue.build());
        onChanged();
      } else {
        personalUrisBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder addPersonalUris(
        int index, com.google.cloud.talent.v4beta1.PersonalUri.Builder builderForValue) {
      if (personalUrisBuilder_ == null) {
        ensurePersonalUrisIsMutable();
        personalUris_.add(index, builderForValue.build());
        onChanged();
      } else {
        personalUrisBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder addAllPersonalUris(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.PersonalUri> values) {
      if (personalUrisBuilder_ == null) {
        ensurePersonalUrisIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, personalUris_);
        onChanged();
      } else {
        personalUrisBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder clearPersonalUris() {
      if (personalUrisBuilder_ == null) {
        personalUris_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        personalUrisBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public Builder removePersonalUris(int index) {
      if (personalUrisBuilder_ == null) {
        ensurePersonalUrisIsMutable();
        personalUris_.remove(index);
        onChanged();
      } else {
        personalUrisBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonalUri.Builder getPersonalUrisBuilder(
        int index) {
      return getPersonalUrisFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonalUriOrBuilder getPersonalUrisOrBuilder(
        int index) {
      if (personalUrisBuilder_ == null) {
        return personalUris_.get(index);  } else {
        return personalUrisBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.PersonalUriOrBuilder> 
         getPersonalUrisOrBuilderList() {
      if (personalUrisBuilder_ != null) {
        return personalUrisBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(personalUris_);
      }
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonalUri.Builder addPersonalUrisBuilder() {
      return getPersonalUrisFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.PersonalUri.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public com.google.cloud.talent.v4beta1.PersonalUri.Builder addPersonalUrisBuilder(
        int index) {
      return getPersonalUrisFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.PersonalUri.getDefaultInstance());
    }
    /**
     * <pre>
     * The candidate's personal URIs.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.PersonalUri personal_uris = 15;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.PersonalUri.Builder> 
         getPersonalUrisBuilderList() {
      return getPersonalUrisFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.PersonalUri, com.google.cloud.talent.v4beta1.PersonalUri.Builder, com.google.cloud.talent.v4beta1.PersonalUriOrBuilder> 
        getPersonalUrisFieldBuilder() {
      if (personalUrisBuilder_ == null) {
        personalUrisBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.PersonalUri, com.google.cloud.talent.v4beta1.PersonalUri.Builder, com.google.cloud.talent.v4beta1.PersonalUriOrBuilder>(
                personalUris_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        personalUris_ = null;
      }
      return personalUrisBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.AdditionalContactInfo> additionalContactInfo_ =
      java.util.Collections.emptyList();
    private void ensureAdditionalContactInfoIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        additionalContactInfo_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.AdditionalContactInfo>(additionalContactInfo_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.AdditionalContactInfo, com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder, com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder> additionalContactInfoBuilder_;

    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.AdditionalContactInfo> getAdditionalContactInfoList() {
      if (additionalContactInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(additionalContactInfo_);
      } else {
        return additionalContactInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public int getAdditionalContactInfoCount() {
      if (additionalContactInfoBuilder_ == null) {
        return additionalContactInfo_.size();
      } else {
        return additionalContactInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public com.google.cloud.talent.v4beta1.AdditionalContactInfo getAdditionalContactInfo(int index) {
      if (additionalContactInfoBuilder_ == null) {
        return additionalContactInfo_.get(index);
      } else {
        return additionalContactInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder setAdditionalContactInfo(
        int index, com.google.cloud.talent.v4beta1.AdditionalContactInfo value) {
      if (additionalContactInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalContactInfoIsMutable();
        additionalContactInfo_.set(index, value);
        onChanged();
      } else {
        additionalContactInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder setAdditionalContactInfo(
        int index, com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder builderForValue) {
      if (additionalContactInfoBuilder_ == null) {
        ensureAdditionalContactInfoIsMutable();
        additionalContactInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        additionalContactInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder addAdditionalContactInfo(com.google.cloud.talent.v4beta1.AdditionalContactInfo value) {
      if (additionalContactInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalContactInfoIsMutable();
        additionalContactInfo_.add(value);
        onChanged();
      } else {
        additionalContactInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder addAdditionalContactInfo(
        int index, com.google.cloud.talent.v4beta1.AdditionalContactInfo value) {
      if (additionalContactInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalContactInfoIsMutable();
        additionalContactInfo_.add(index, value);
        onChanged();
      } else {
        additionalContactInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder addAdditionalContactInfo(
        com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder builderForValue) {
      if (additionalContactInfoBuilder_ == null) {
        ensureAdditionalContactInfoIsMutable();
        additionalContactInfo_.add(builderForValue.build());
        onChanged();
      } else {
        additionalContactInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder addAdditionalContactInfo(
        int index, com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder builderForValue) {
      if (additionalContactInfoBuilder_ == null) {
        ensureAdditionalContactInfoIsMutable();
        additionalContactInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        additionalContactInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder addAllAdditionalContactInfo(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.AdditionalContactInfo> values) {
      if (additionalContactInfoBuilder_ == null) {
        ensureAdditionalContactInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, additionalContactInfo_);
        onChanged();
      } else {
        additionalContactInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder clearAdditionalContactInfo() {
      if (additionalContactInfoBuilder_ == null) {
        additionalContactInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        additionalContactInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public Builder removeAdditionalContactInfo(int index) {
      if (additionalContactInfoBuilder_ == null) {
        ensureAdditionalContactInfoIsMutable();
        additionalContactInfo_.remove(index);
        onChanged();
      } else {
        additionalContactInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder getAdditionalContactInfoBuilder(
        int index) {
      return getAdditionalContactInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder getAdditionalContactInfoOrBuilder(
        int index) {
      if (additionalContactInfoBuilder_ == null) {
        return additionalContactInfo_.get(index);  } else {
        return additionalContactInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder> 
         getAdditionalContactInfoOrBuilderList() {
      if (additionalContactInfoBuilder_ != null) {
        return additionalContactInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(additionalContactInfo_);
      }
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder addAdditionalContactInfoBuilder() {
      return getAdditionalContactInfoFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.AdditionalContactInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder addAdditionalContactInfoBuilder(
        int index) {
      return getAdditionalContactInfoFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.AdditionalContactInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
     * [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AdditionalContactInfo additional_contact_info = 16;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder> 
         getAdditionalContactInfoBuilderList() {
      return getAdditionalContactInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.AdditionalContactInfo, com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder, com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder> 
        getAdditionalContactInfoFieldBuilder() {
      if (additionalContactInfoBuilder_ == null) {
        additionalContactInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.AdditionalContactInfo, com.google.cloud.talent.v4beta1.AdditionalContactInfo.Builder, com.google.cloud.talent.v4beta1.AdditionalContactInfoOrBuilder>(
                additionalContactInfo_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        additionalContactInfo_ = null;
      }
      return additionalContactInfoBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.EmploymentRecord> employmentRecords_ =
      java.util.Collections.emptyList();
    private void ensureEmploymentRecordsIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        employmentRecords_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.EmploymentRecord>(employmentRecords_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.EmploymentRecord, com.google.cloud.talent.v4beta1.EmploymentRecord.Builder, com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder> employmentRecordsBuilder_;

    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.EmploymentRecord> getEmploymentRecordsList() {
      if (employmentRecordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(employmentRecords_);
      } else {
        return employmentRecordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public int getEmploymentRecordsCount() {
      if (employmentRecordsBuilder_ == null) {
        return employmentRecords_.size();
      } else {
        return employmentRecordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public com.google.cloud.talent.v4beta1.EmploymentRecord getEmploymentRecords(int index) {
      if (employmentRecordsBuilder_ == null) {
        return employmentRecords_.get(index);
      } else {
        return employmentRecordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder setEmploymentRecords(
        int index, com.google.cloud.talent.v4beta1.EmploymentRecord value) {
      if (employmentRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmploymentRecordsIsMutable();
        employmentRecords_.set(index, value);
        onChanged();
      } else {
        employmentRecordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder setEmploymentRecords(
        int index, com.google.cloud.talent.v4beta1.EmploymentRecord.Builder builderForValue) {
      if (employmentRecordsBuilder_ == null) {
        ensureEmploymentRecordsIsMutable();
        employmentRecords_.set(index, builderForValue.build());
        onChanged();
      } else {
        employmentRecordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder addEmploymentRecords(com.google.cloud.talent.v4beta1.EmploymentRecord value) {
      if (employmentRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmploymentRecordsIsMutable();
        employmentRecords_.add(value);
        onChanged();
      } else {
        employmentRecordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder addEmploymentRecords(
        int index, com.google.cloud.talent.v4beta1.EmploymentRecord value) {
      if (employmentRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmploymentRecordsIsMutable();
        employmentRecords_.add(index, value);
        onChanged();
      } else {
        employmentRecordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder addEmploymentRecords(
        com.google.cloud.talent.v4beta1.EmploymentRecord.Builder builderForValue) {
      if (employmentRecordsBuilder_ == null) {
        ensureEmploymentRecordsIsMutable();
        employmentRecords_.add(builderForValue.build());
        onChanged();
      } else {
        employmentRecordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder addEmploymentRecords(
        int index, com.google.cloud.talent.v4beta1.EmploymentRecord.Builder builderForValue) {
      if (employmentRecordsBuilder_ == null) {
        ensureEmploymentRecordsIsMutable();
        employmentRecords_.add(index, builderForValue.build());
        onChanged();
      } else {
        employmentRecordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder addAllEmploymentRecords(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.EmploymentRecord> values) {
      if (employmentRecordsBuilder_ == null) {
        ensureEmploymentRecordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, employmentRecords_);
        onChanged();
      } else {
        employmentRecordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder clearEmploymentRecords() {
      if (employmentRecordsBuilder_ == null) {
        employmentRecords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        employmentRecordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public Builder removeEmploymentRecords(int index) {
      if (employmentRecordsBuilder_ == null) {
        ensureEmploymentRecordsIsMutable();
        employmentRecords_.remove(index);
        onChanged();
      } else {
        employmentRecordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public com.google.cloud.talent.v4beta1.EmploymentRecord.Builder getEmploymentRecordsBuilder(
        int index) {
      return getEmploymentRecordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder getEmploymentRecordsOrBuilder(
        int index) {
      if (employmentRecordsBuilder_ == null) {
        return employmentRecords_.get(index);  } else {
        return employmentRecordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder> 
         getEmploymentRecordsOrBuilderList() {
      if (employmentRecordsBuilder_ != null) {
        return employmentRecordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(employmentRecords_);
      }
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public com.google.cloud.talent.v4beta1.EmploymentRecord.Builder addEmploymentRecordsBuilder() {
      return getEmploymentRecordsFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.EmploymentRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public com.google.cloud.talent.v4beta1.EmploymentRecord.Builder addEmploymentRecordsBuilder(
        int index) {
      return getEmploymentRecordsFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.EmploymentRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * The employment history records of the candidate. It's highly recommended
     * to input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the employment records.
     * * List different employment types separately, no matter how minor the
     * change is.
     * For example, only job title is changed from "software engineer" to "senior
     * software engineer".
     * * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of employment records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EmploymentRecord employment_records = 17;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.EmploymentRecord.Builder> 
         getEmploymentRecordsBuilderList() {
      return getEmploymentRecordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.EmploymentRecord, com.google.cloud.talent.v4beta1.EmploymentRecord.Builder, com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder> 
        getEmploymentRecordsFieldBuilder() {
      if (employmentRecordsBuilder_ == null) {
        employmentRecordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.EmploymentRecord, com.google.cloud.talent.v4beta1.EmploymentRecord.Builder, com.google.cloud.talent.v4beta1.EmploymentRecordOrBuilder>(
                employmentRecords_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        employmentRecords_ = null;
      }
      return employmentRecordsBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.EducationRecord> educationRecords_ =
      java.util.Collections.emptyList();
    private void ensureEducationRecordsIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        educationRecords_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.EducationRecord>(educationRecords_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.EducationRecord, com.google.cloud.talent.v4beta1.EducationRecord.Builder, com.google.cloud.talent.v4beta1.EducationRecordOrBuilder> educationRecordsBuilder_;

    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.EducationRecord> getEducationRecordsList() {
      if (educationRecordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(educationRecords_);
      } else {
        return educationRecordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public int getEducationRecordsCount() {
      if (educationRecordsBuilder_ == null) {
        return educationRecords_.size();
      } else {
        return educationRecordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public com.google.cloud.talent.v4beta1.EducationRecord getEducationRecords(int index) {
      if (educationRecordsBuilder_ == null) {
        return educationRecords_.get(index);
      } else {
        return educationRecordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder setEducationRecords(
        int index, com.google.cloud.talent.v4beta1.EducationRecord value) {
      if (educationRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEducationRecordsIsMutable();
        educationRecords_.set(index, value);
        onChanged();
      } else {
        educationRecordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder setEducationRecords(
        int index, com.google.cloud.talent.v4beta1.EducationRecord.Builder builderForValue) {
      if (educationRecordsBuilder_ == null) {
        ensureEducationRecordsIsMutable();
        educationRecords_.set(index, builderForValue.build());
        onChanged();
      } else {
        educationRecordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder addEducationRecords(com.google.cloud.talent.v4beta1.EducationRecord value) {
      if (educationRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEducationRecordsIsMutable();
        educationRecords_.add(value);
        onChanged();
      } else {
        educationRecordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder addEducationRecords(
        int index, com.google.cloud.talent.v4beta1.EducationRecord value) {
      if (educationRecordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEducationRecordsIsMutable();
        educationRecords_.add(index, value);
        onChanged();
      } else {
        educationRecordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder addEducationRecords(
        com.google.cloud.talent.v4beta1.EducationRecord.Builder builderForValue) {
      if (educationRecordsBuilder_ == null) {
        ensureEducationRecordsIsMutable();
        educationRecords_.add(builderForValue.build());
        onChanged();
      } else {
        educationRecordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder addEducationRecords(
        int index, com.google.cloud.talent.v4beta1.EducationRecord.Builder builderForValue) {
      if (educationRecordsBuilder_ == null) {
        ensureEducationRecordsIsMutable();
        educationRecords_.add(index, builderForValue.build());
        onChanged();
      } else {
        educationRecordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder addAllEducationRecords(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.EducationRecord> values) {
      if (educationRecordsBuilder_ == null) {
        ensureEducationRecordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, educationRecords_);
        onChanged();
      } else {
        educationRecordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder clearEducationRecords() {
      if (educationRecordsBuilder_ == null) {
        educationRecords_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        educationRecordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public Builder removeEducationRecords(int index) {
      if (educationRecordsBuilder_ == null) {
        ensureEducationRecordsIsMutable();
        educationRecords_.remove(index);
        onChanged();
      } else {
        educationRecordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public com.google.cloud.talent.v4beta1.EducationRecord.Builder getEducationRecordsBuilder(
        int index) {
      return getEducationRecordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public com.google.cloud.talent.v4beta1.EducationRecordOrBuilder getEducationRecordsOrBuilder(
        int index) {
      if (educationRecordsBuilder_ == null) {
        return educationRecords_.get(index);  } else {
        return educationRecordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.EducationRecordOrBuilder> 
         getEducationRecordsOrBuilderList() {
      if (educationRecordsBuilder_ != null) {
        return educationRecordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(educationRecords_);
      }
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public com.google.cloud.talent.v4beta1.EducationRecord.Builder addEducationRecordsBuilder() {
      return getEducationRecordsFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.EducationRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public com.google.cloud.talent.v4beta1.EducationRecord.Builder addEducationRecordsBuilder(
        int index) {
      return getEducationRecordsFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.EducationRecord.getDefaultInstance());
    }
    /**
     * <pre>
     * The education history record of the candidate. It's highly recommended to
     * input this information as accurately as possible to help improve search
     * quality. Here are some recommendations:
     * * Specify the start and end dates of the education records.
     * * List each education type separately, no matter how minor the change is.
     * For example, the profile contains the education experience from the same
     * school but different degrees.
     * * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
     * possible. If not, it's inferred from user inputs.
     * The limitation for max number of education records is 100.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.EducationRecord education_records = 18;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.EducationRecord.Builder> 
         getEducationRecordsBuilderList() {
      return getEducationRecordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.EducationRecord, com.google.cloud.talent.v4beta1.EducationRecord.Builder, com.google.cloud.talent.v4beta1.EducationRecordOrBuilder> 
        getEducationRecordsFieldBuilder() {
      if (educationRecordsBuilder_ == null) {
        educationRecordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.EducationRecord, com.google.cloud.talent.v4beta1.EducationRecord.Builder, com.google.cloud.talent.v4beta1.EducationRecordOrBuilder>(
                educationRecords_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        educationRecords_ = null;
      }
      return educationRecordsBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Skill> skills_ =
      java.util.Collections.emptyList();
    private void ensureSkillsIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        skills_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Skill>(skills_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Skill, com.google.cloud.talent.v4beta1.Skill.Builder, com.google.cloud.talent.v4beta1.SkillOrBuilder> skillsBuilder_;

    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Skill> getSkillsList() {
      if (skillsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(skills_);
      } else {
        return skillsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public int getSkillsCount() {
      if (skillsBuilder_ == null) {
        return skills_.size();
      } else {
        return skillsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public com.google.cloud.talent.v4beta1.Skill getSkills(int index) {
      if (skillsBuilder_ == null) {
        return skills_.get(index);
      } else {
        return skillsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder setSkills(
        int index, com.google.cloud.talent.v4beta1.Skill value) {
      if (skillsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillsIsMutable();
        skills_.set(index, value);
        onChanged();
      } else {
        skillsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder setSkills(
        int index, com.google.cloud.talent.v4beta1.Skill.Builder builderForValue) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.set(index, builderForValue.build());
        onChanged();
      } else {
        skillsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder addSkills(com.google.cloud.talent.v4beta1.Skill value) {
      if (skillsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillsIsMutable();
        skills_.add(value);
        onChanged();
      } else {
        skillsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder addSkills(
        int index, com.google.cloud.talent.v4beta1.Skill value) {
      if (skillsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSkillsIsMutable();
        skills_.add(index, value);
        onChanged();
      } else {
        skillsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder addSkills(
        com.google.cloud.talent.v4beta1.Skill.Builder builderForValue) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.add(builderForValue.build());
        onChanged();
      } else {
        skillsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder addSkills(
        int index, com.google.cloud.talent.v4beta1.Skill.Builder builderForValue) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.add(index, builderForValue.build());
        onChanged();
      } else {
        skillsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder addAllSkills(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Skill> values) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, skills_);
        onChanged();
      } else {
        skillsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder clearSkills() {
      if (skillsBuilder_ == null) {
        skills_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        skillsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public Builder removeSkills(int index) {
      if (skillsBuilder_ == null) {
        ensureSkillsIsMutable();
        skills_.remove(index);
        onChanged();
      } else {
        skillsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public com.google.cloud.talent.v4beta1.Skill.Builder getSkillsBuilder(
        int index) {
      return getSkillsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public com.google.cloud.talent.v4beta1.SkillOrBuilder getSkillsOrBuilder(
        int index) {
      if (skillsBuilder_ == null) {
        return skills_.get(index);  } else {
        return skillsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.SkillOrBuilder> 
         getSkillsOrBuilderList() {
      if (skillsBuilder_ != null) {
        return skillsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(skills_);
      }
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public com.google.cloud.talent.v4beta1.Skill.Builder addSkillsBuilder() {
      return getSkillsFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Skill.getDefaultInstance());
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public com.google.cloud.talent.v4beta1.Skill.Builder addSkillsBuilder(
        int index) {
      return getSkillsFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Skill.getDefaultInstance());
    }
    /**
     * <pre>
     * The skill set of the candidate. It's highly recommended to provide as
     * much information as possible to help improve the search quality.
     * The limitation for max number of skills is 500.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Skill skills = 19;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Skill.Builder> 
         getSkillsBuilderList() {
      return getSkillsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Skill, com.google.cloud.talent.v4beta1.Skill.Builder, com.google.cloud.talent.v4beta1.SkillOrBuilder> 
        getSkillsFieldBuilder() {
      if (skillsBuilder_ == null) {
        skillsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Skill, com.google.cloud.talent.v4beta1.Skill.Builder, com.google.cloud.talent.v4beta1.SkillOrBuilder>(
                skills_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        skills_ = null;
      }
      return skillsBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Activity> activities_ =
      java.util.Collections.emptyList();
    private void ensureActivitiesIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        activities_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Activity>(activities_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Activity, com.google.cloud.talent.v4beta1.Activity.Builder, com.google.cloud.talent.v4beta1.ActivityOrBuilder> activitiesBuilder_;

    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Activity> getActivitiesList() {
      if (activitiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(activities_);
      } else {
        return activitiesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public int getActivitiesCount() {
      if (activitiesBuilder_ == null) {
        return activities_.size();
      } else {
        return activitiesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public com.google.cloud.talent.v4beta1.Activity getActivities(int index) {
      if (activitiesBuilder_ == null) {
        return activities_.get(index);
      } else {
        return activitiesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder setActivities(
        int index, com.google.cloud.talent.v4beta1.Activity value) {
      if (activitiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivitiesIsMutable();
        activities_.set(index, value);
        onChanged();
      } else {
        activitiesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder setActivities(
        int index, com.google.cloud.talent.v4beta1.Activity.Builder builderForValue) {
      if (activitiesBuilder_ == null) {
        ensureActivitiesIsMutable();
        activities_.set(index, builderForValue.build());
        onChanged();
      } else {
        activitiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder addActivities(com.google.cloud.talent.v4beta1.Activity value) {
      if (activitiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivitiesIsMutable();
        activities_.add(value);
        onChanged();
      } else {
        activitiesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder addActivities(
        int index, com.google.cloud.talent.v4beta1.Activity value) {
      if (activitiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActivitiesIsMutable();
        activities_.add(index, value);
        onChanged();
      } else {
        activitiesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder addActivities(
        com.google.cloud.talent.v4beta1.Activity.Builder builderForValue) {
      if (activitiesBuilder_ == null) {
        ensureActivitiesIsMutable();
        activities_.add(builderForValue.build());
        onChanged();
      } else {
        activitiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder addActivities(
        int index, com.google.cloud.talent.v4beta1.Activity.Builder builderForValue) {
      if (activitiesBuilder_ == null) {
        ensureActivitiesIsMutable();
        activities_.add(index, builderForValue.build());
        onChanged();
      } else {
        activitiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder addAllActivities(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Activity> values) {
      if (activitiesBuilder_ == null) {
        ensureActivitiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, activities_);
        onChanged();
      } else {
        activitiesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder clearActivities() {
      if (activitiesBuilder_ == null) {
        activities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        activitiesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public Builder removeActivities(int index) {
      if (activitiesBuilder_ == null) {
        ensureActivitiesIsMutable();
        activities_.remove(index);
        onChanged();
      } else {
        activitiesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public com.google.cloud.talent.v4beta1.Activity.Builder getActivitiesBuilder(
        int index) {
      return getActivitiesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public com.google.cloud.talent.v4beta1.ActivityOrBuilder getActivitiesOrBuilder(
        int index) {
      if (activitiesBuilder_ == null) {
        return activities_.get(index);  } else {
        return activitiesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.ActivityOrBuilder> 
         getActivitiesOrBuilderList() {
      if (activitiesBuilder_ != null) {
        return activitiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(activities_);
      }
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public com.google.cloud.talent.v4beta1.Activity.Builder addActivitiesBuilder() {
      return getActivitiesFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Activity.getDefaultInstance());
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public com.google.cloud.talent.v4beta1.Activity.Builder addActivitiesBuilder(
        int index) {
      return getActivitiesFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Activity.getDefaultInstance());
    }
    /**
     * <pre>
     * The individual or collaborative activities which the candidate has
     * participated in, for example, open-source projects, class assignments that
     * aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].
     * The limitation for max number of activities is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Activity activities = 20;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Activity.Builder> 
         getActivitiesBuilderList() {
      return getActivitiesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Activity, com.google.cloud.talent.v4beta1.Activity.Builder, com.google.cloud.talent.v4beta1.ActivityOrBuilder> 
        getActivitiesFieldBuilder() {
      if (activitiesBuilder_ == null) {
        activitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Activity, com.google.cloud.talent.v4beta1.Activity.Builder, com.google.cloud.talent.v4beta1.ActivityOrBuilder>(
                activities_,
                ((bitField0_ & 0x00000200) != 0),
                getParentForChildren(),
                isClean());
        activities_ = null;
      }
      return activitiesBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Publication> publications_ =
      java.util.Collections.emptyList();
    private void ensurePublicationsIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        publications_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Publication>(publications_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Publication, com.google.cloud.talent.v4beta1.Publication.Builder, com.google.cloud.talent.v4beta1.PublicationOrBuilder> publicationsBuilder_;

    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Publication> getPublicationsList() {
      if (publicationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(publications_);
      } else {
        return publicationsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public int getPublicationsCount() {
      if (publicationsBuilder_ == null) {
        return publications_.size();
      } else {
        return publicationsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public com.google.cloud.talent.v4beta1.Publication getPublications(int index) {
      if (publicationsBuilder_ == null) {
        return publications_.get(index);
      } else {
        return publicationsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder setPublications(
        int index, com.google.cloud.talent.v4beta1.Publication value) {
      if (publicationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePublicationsIsMutable();
        publications_.set(index, value);
        onChanged();
      } else {
        publicationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder setPublications(
        int index, com.google.cloud.talent.v4beta1.Publication.Builder builderForValue) {
      if (publicationsBuilder_ == null) {
        ensurePublicationsIsMutable();
        publications_.set(index, builderForValue.build());
        onChanged();
      } else {
        publicationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder addPublications(com.google.cloud.talent.v4beta1.Publication value) {
      if (publicationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePublicationsIsMutable();
        publications_.add(value);
        onChanged();
      } else {
        publicationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder addPublications(
        int index, com.google.cloud.talent.v4beta1.Publication value) {
      if (publicationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePublicationsIsMutable();
        publications_.add(index, value);
        onChanged();
      } else {
        publicationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder addPublications(
        com.google.cloud.talent.v4beta1.Publication.Builder builderForValue) {
      if (publicationsBuilder_ == null) {
        ensurePublicationsIsMutable();
        publications_.add(builderForValue.build());
        onChanged();
      } else {
        publicationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder addPublications(
        int index, com.google.cloud.talent.v4beta1.Publication.Builder builderForValue) {
      if (publicationsBuilder_ == null) {
        ensurePublicationsIsMutable();
        publications_.add(index, builderForValue.build());
        onChanged();
      } else {
        publicationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder addAllPublications(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Publication> values) {
      if (publicationsBuilder_ == null) {
        ensurePublicationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, publications_);
        onChanged();
      } else {
        publicationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder clearPublications() {
      if (publicationsBuilder_ == null) {
        publications_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        publicationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public Builder removePublications(int index) {
      if (publicationsBuilder_ == null) {
        ensurePublicationsIsMutable();
        publications_.remove(index);
        onChanged();
      } else {
        publicationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public com.google.cloud.talent.v4beta1.Publication.Builder getPublicationsBuilder(
        int index) {
      return getPublicationsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public com.google.cloud.talent.v4beta1.PublicationOrBuilder getPublicationsOrBuilder(
        int index) {
      if (publicationsBuilder_ == null) {
        return publications_.get(index);  } else {
        return publicationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.PublicationOrBuilder> 
         getPublicationsOrBuilderList() {
      if (publicationsBuilder_ != null) {
        return publicationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(publications_);
      }
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public com.google.cloud.talent.v4beta1.Publication.Builder addPublicationsBuilder() {
      return getPublicationsFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Publication.getDefaultInstance());
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public com.google.cloud.talent.v4beta1.Publication.Builder addPublicationsBuilder(
        int index) {
      return getPublicationsFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Publication.getDefaultInstance());
    }
    /**
     * <pre>
     * The publications published by the candidate.
     * The limitation for max number of publications is 50.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Publication publications = 21;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Publication.Builder> 
         getPublicationsBuilderList() {
      return getPublicationsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Publication, com.google.cloud.talent.v4beta1.Publication.Builder, com.google.cloud.talent.v4beta1.PublicationOrBuilder> 
        getPublicationsFieldBuilder() {
      if (publicationsBuilder_ == null) {
        publicationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Publication, com.google.cloud.talent.v4beta1.Publication.Builder, com.google.cloud.talent.v4beta1.PublicationOrBuilder>(
                publications_,
                ((bitField0_ & 0x00000400) != 0),
                getParentForChildren(),
                isClean());
        publications_ = null;
      }
      return publicationsBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Patent> patents_ =
      java.util.Collections.emptyList();
    private void ensurePatentsIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        patents_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Patent>(patents_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Patent, com.google.cloud.talent.v4beta1.Patent.Builder, com.google.cloud.talent.v4beta1.PatentOrBuilder> patentsBuilder_;

    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Patent> getPatentsList() {
      if (patentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(patents_);
      } else {
        return patentsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public int getPatentsCount() {
      if (patentsBuilder_ == null) {
        return patents_.size();
      } else {
        return patentsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public com.google.cloud.talent.v4beta1.Patent getPatents(int index) {
      if (patentsBuilder_ == null) {
        return patents_.get(index);
      } else {
        return patentsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder setPatents(
        int index, com.google.cloud.talent.v4beta1.Patent value) {
      if (patentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePatentsIsMutable();
        patents_.set(index, value);
        onChanged();
      } else {
        patentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder setPatents(
        int index, com.google.cloud.talent.v4beta1.Patent.Builder builderForValue) {
      if (patentsBuilder_ == null) {
        ensurePatentsIsMutable();
        patents_.set(index, builderForValue.build());
        onChanged();
      } else {
        patentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder addPatents(com.google.cloud.talent.v4beta1.Patent value) {
      if (patentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePatentsIsMutable();
        patents_.add(value);
        onChanged();
      } else {
        patentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder addPatents(
        int index, com.google.cloud.talent.v4beta1.Patent value) {
      if (patentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePatentsIsMutable();
        patents_.add(index, value);
        onChanged();
      } else {
        patentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder addPatents(
        com.google.cloud.talent.v4beta1.Patent.Builder builderForValue) {
      if (patentsBuilder_ == null) {
        ensurePatentsIsMutable();
        patents_.add(builderForValue.build());
        onChanged();
      } else {
        patentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder addPatents(
        int index, com.google.cloud.talent.v4beta1.Patent.Builder builderForValue) {
      if (patentsBuilder_ == null) {
        ensurePatentsIsMutable();
        patents_.add(index, builderForValue.build());
        onChanged();
      } else {
        patentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder addAllPatents(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Patent> values) {
      if (patentsBuilder_ == null) {
        ensurePatentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, patents_);
        onChanged();
      } else {
        patentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder clearPatents() {
      if (patentsBuilder_ == null) {
        patents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        patentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public Builder removePatents(int index) {
      if (patentsBuilder_ == null) {
        ensurePatentsIsMutable();
        patents_.remove(index);
        onChanged();
      } else {
        patentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public com.google.cloud.talent.v4beta1.Patent.Builder getPatentsBuilder(
        int index) {
      return getPatentsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public com.google.cloud.talent.v4beta1.PatentOrBuilder getPatentsOrBuilder(
        int index) {
      if (patentsBuilder_ == null) {
        return patents_.get(index);  } else {
        return patentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.PatentOrBuilder> 
         getPatentsOrBuilderList() {
      if (patentsBuilder_ != null) {
        return patentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(patents_);
      }
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public com.google.cloud.talent.v4beta1.Patent.Builder addPatentsBuilder() {
      return getPatentsFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Patent.getDefaultInstance());
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public com.google.cloud.talent.v4beta1.Patent.Builder addPatentsBuilder(
        int index) {
      return getPatentsFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Patent.getDefaultInstance());
    }
    /**
     * <pre>
     * The patents acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Patent patents = 22;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Patent.Builder> 
         getPatentsBuilderList() {
      return getPatentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Patent, com.google.cloud.talent.v4beta1.Patent.Builder, com.google.cloud.talent.v4beta1.PatentOrBuilder> 
        getPatentsFieldBuilder() {
      if (patentsBuilder_ == null) {
        patentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Patent, com.google.cloud.talent.v4beta1.Patent.Builder, com.google.cloud.talent.v4beta1.PatentOrBuilder>(
                patents_,
                ((bitField0_ & 0x00000800) != 0),
                getParentForChildren(),
                isClean());
        patents_ = null;
      }
      return patentsBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Certification> certifications_ =
      java.util.Collections.emptyList();
    private void ensureCertificationsIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        certifications_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Certification>(certifications_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Certification, com.google.cloud.talent.v4beta1.Certification.Builder, com.google.cloud.talent.v4beta1.CertificationOrBuilder> certificationsBuilder_;

    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Certification> getCertificationsList() {
      if (certificationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(certifications_);
      } else {
        return certificationsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public int getCertificationsCount() {
      if (certificationsBuilder_ == null) {
        return certifications_.size();
      } else {
        return certificationsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public com.google.cloud.talent.v4beta1.Certification getCertifications(int index) {
      if (certificationsBuilder_ == null) {
        return certifications_.get(index);
      } else {
        return certificationsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder setCertifications(
        int index, com.google.cloud.talent.v4beta1.Certification value) {
      if (certificationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificationsIsMutable();
        certifications_.set(index, value);
        onChanged();
      } else {
        certificationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder setCertifications(
        int index, com.google.cloud.talent.v4beta1.Certification.Builder builderForValue) {
      if (certificationsBuilder_ == null) {
        ensureCertificationsIsMutable();
        certifications_.set(index, builderForValue.build());
        onChanged();
      } else {
        certificationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder addCertifications(com.google.cloud.talent.v4beta1.Certification value) {
      if (certificationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificationsIsMutable();
        certifications_.add(value);
        onChanged();
      } else {
        certificationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder addCertifications(
        int index, com.google.cloud.talent.v4beta1.Certification value) {
      if (certificationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificationsIsMutable();
        certifications_.add(index, value);
        onChanged();
      } else {
        certificationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder addCertifications(
        com.google.cloud.talent.v4beta1.Certification.Builder builderForValue) {
      if (certificationsBuilder_ == null) {
        ensureCertificationsIsMutable();
        certifications_.add(builderForValue.build());
        onChanged();
      } else {
        certificationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder addCertifications(
        int index, com.google.cloud.talent.v4beta1.Certification.Builder builderForValue) {
      if (certificationsBuilder_ == null) {
        ensureCertificationsIsMutable();
        certifications_.add(index, builderForValue.build());
        onChanged();
      } else {
        certificationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder addAllCertifications(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Certification> values) {
      if (certificationsBuilder_ == null) {
        ensureCertificationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, certifications_);
        onChanged();
      } else {
        certificationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder clearCertifications() {
      if (certificationsBuilder_ == null) {
        certifications_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        certificationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public Builder removeCertifications(int index) {
      if (certificationsBuilder_ == null) {
        ensureCertificationsIsMutable();
        certifications_.remove(index);
        onChanged();
      } else {
        certificationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public com.google.cloud.talent.v4beta1.Certification.Builder getCertificationsBuilder(
        int index) {
      return getCertificationsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public com.google.cloud.talent.v4beta1.CertificationOrBuilder getCertificationsOrBuilder(
        int index) {
      if (certificationsBuilder_ == null) {
        return certifications_.get(index);  } else {
        return certificationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.CertificationOrBuilder> 
         getCertificationsOrBuilderList() {
      if (certificationsBuilder_ != null) {
        return certificationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(certifications_);
      }
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public com.google.cloud.talent.v4beta1.Certification.Builder addCertificationsBuilder() {
      return getCertificationsFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Certification.getDefaultInstance());
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public com.google.cloud.talent.v4beta1.Certification.Builder addCertificationsBuilder(
        int index) {
      return getCertificationsFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Certification.getDefaultInstance());
    }
    /**
     * <pre>
     * The certifications acquired by the candidate.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Certification certifications = 23;</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Certification.Builder> 
         getCertificationsBuilderList() {
      return getCertificationsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Certification, com.google.cloud.talent.v4beta1.Certification.Builder, com.google.cloud.talent.v4beta1.CertificationOrBuilder> 
        getCertificationsFieldBuilder() {
      if (certificationsBuilder_ == null) {
        certificationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Certification, com.google.cloud.talent.v4beta1.Certification.Builder, com.google.cloud.talent.v4beta1.CertificationOrBuilder>(
                certifications_,
                ((bitField0_ & 0x00001000) != 0),
                getParentForChildren(),
                isClean());
        certifications_ = null;
      }
      return certificationsBuilder_;
    }

    private com.google.protobuf.LazyStringList applications_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureApplicationsIsMutable() {
      if (!((bitField0_ & 0x00002000) != 0)) {
        applications_ = new com.google.protobuf.LazyStringArrayList(applications_);
        bitField0_ |= 0x00002000;
       }
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return A list containing the applications.
     */
    public com.google.protobuf.ProtocolStringList
        getApplicationsList() {
      return applications_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The count of applications.
     */
    public int getApplicationsCount() {
      return applications_.size();
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param index The index of the element to return.
     * @return The applications at the given index.
     */
    public java.lang.String getApplications(int index) {
      return applications_.get(index);
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param index The index of the value to return.
     * @return The bytes of the applications at the given index.
     */
    public com.google.protobuf.ByteString
        getApplicationsBytes(int index) {
      return applications_.getByteString(index);
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param index The index to set the value at.
     * @param value The applications to set.
     * @return This builder for chaining.
     */
    public Builder setApplications(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureApplicationsIsMutable();
      applications_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The applications to add.
     * @return This builder for chaining.
     */
    public Builder addApplications(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureApplicationsIsMutable();
      applications_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param values The applications to add.
     * @return This builder for chaining.
     */
    public Builder addAllApplications(
        java.lang.Iterable<java.lang.String> values) {
      ensureApplicationsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, applications_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearApplications() {
      applications_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's applications.
     * </pre>
     *
     * <code>repeated string applications = 47 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes of the applications to add.
     * @return This builder for chaining.
     */
    public Builder addApplicationsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureApplicationsIsMutable();
      applications_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList assignments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureAssignmentsIsMutable() {
      if (!((bitField0_ & 0x00004000) != 0)) {
        assignments_ = new com.google.protobuf.LazyStringArrayList(assignments_);
        bitField0_ |= 0x00004000;
       }
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return A list containing the assignments.
     */
    public com.google.protobuf.ProtocolStringList
        getAssignmentsList() {
      return assignments_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The count of assignments.
     */
    public int getAssignmentsCount() {
      return assignments_.size();
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param index The index of the element to return.
     * @return The assignments at the given index.
     */
    public java.lang.String getAssignments(int index) {
      return assignments_.get(index);
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param index The index of the value to return.
     * @return The bytes of the assignments at the given index.
     */
    public com.google.protobuf.ByteString
        getAssignmentsBytes(int index) {
      return assignments_.getByteString(index);
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param index The index to set the value at.
     * @param value The assignments to set.
     * @return This builder for chaining.
     */
    public Builder setAssignments(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureAssignmentsIsMutable();
      assignments_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The assignments to add.
     * @return This builder for chaining.
     */
    public Builder addAssignments(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureAssignmentsIsMutable();
      assignments_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param values The assignments to add.
     * @return This builder for chaining.
     */
    public Builder addAllAssignments(
        java.lang.Iterable<java.lang.String> values) {
      ensureAssignmentsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, assignments_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearAssignments() {
      assignments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00004000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The resource names of the candidate's assignments.
     * </pre>
     *
     * <code>repeated string assignments = 48 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes of the assignments to add.
     * @return This builder for chaining.
     */
    public Builder addAssignmentsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureAssignmentsIsMutable();
      assignments_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> customAttributes_;
    private com.google.protobuf.MapField<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
    internalGetCustomAttributes() {
      if (customAttributes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CustomAttributesDefaultEntryHolder.defaultEntry);
      }
      return customAttributes_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
    internalGetMutableCustomAttributes() {
      onChanged();;
      if (customAttributes_ == null) {
        customAttributes_ = com.google.protobuf.MapField.newMapField(
            CustomAttributesDefaultEntryHolder.defaultEntry);
      }
      if (!customAttributes_.isMutable()) {
        customAttributes_ = customAttributes_.copy();
      }
      return customAttributes_;
    }

    public int getCustomAttributesCount() {
      return internalGetCustomAttributes().getMap().size();
    }
    /**
     * <pre>
     * A map of fields to hold both filterable and non-filterable custom profile
     * attributes that aren't covered by the provided structured fields. See
     * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
     * At most 100 filterable and at most 100 unfilterable keys are supported. If
     * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
     * by default. These are filterable when the `filterable` flag is set to
     * `true`.
     * Numeric custom attributes: each key can only map to one numeric value,
     * otherwise an error is thrown. Client can also filter on numeric custom
     * attributes using '&gt;', '&lt;' or '=' operators.
     * String custom attributes: each key can map up to 50 string values. For
     * filterable string value, each value has a byte size of no more than 256B.
     * For unfilterable string values, the maximum byte size of a single key is
     * 64B. An error is thrown for any request exceeding the limit.
     * The maximum total byte size is 10KB.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
     */

    @java.lang.Override
    public boolean containsCustomAttributes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetCustomAttributes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCustomAttributesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> getCustomAttributes() {
      return getCustomAttributesMap();
    }
    /**
     * <pre>
     * A map of fields to hold both filterable and non-filterable custom profile
     * attributes that aren't covered by the provided structured fields. See
     * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
     * At most 100 filterable and at most 100 unfilterable keys are supported. If
     * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
     * by default. These are filterable when the `filterable` flag is set to
     * `true`.
     * Numeric custom attributes: each key can only map to one numeric value,
     * otherwise an error is thrown. Client can also filter on numeric custom
     * attributes using '&gt;', '&lt;' or '=' operators.
     * String custom attributes: each key can map up to 50 string values. For
     * filterable string value, each value has a byte size of no more than 256B.
     * For unfilterable string values, the maximum byte size of a single key is
     * 64B. An error is thrown for any request exceeding the limit.
     * The maximum total byte size is 10KB.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> getCustomAttributesMap() {
      return internalGetCustomAttributes().getMap();
    }
    /**
     * <pre>
     * A map of fields to hold both filterable and non-filterable custom profile
     * attributes that aren't covered by the provided structured fields. See
     * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
     * At most 100 filterable and at most 100 unfilterable keys are supported. If
     * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
     * by default. These are filterable when the `filterable` flag is set to
     * `true`.
     * Numeric custom attributes: each key can only map to one numeric value,
     * otherwise an error is thrown. Client can also filter on numeric custom
     * attributes using '&gt;', '&lt;' or '=' operators.
     * String custom attributes: each key can map up to 50 string values. For
     * filterable string value, each value has a byte size of no more than 256B.
     * For unfilterable string values, the maximum byte size of a single key is
     * 64B. An error is thrown for any request exceeding the limit.
     * The maximum total byte size is 10KB.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
     */
    @java.lang.Override

    public com.google.cloud.talent.v4beta1.CustomAttribute getCustomAttributesOrDefault(
        java.lang.String key,
        com.google.cloud.talent.v4beta1.CustomAttribute defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> map =
          internalGetCustomAttributes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map of fields to hold both filterable and non-filterable custom profile
     * attributes that aren't covered by the provided structured fields. See
     * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
     * At most 100 filterable and at most 100 unfilterable keys are supported. If
     * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
     * by default. These are filterable when the `filterable` flag is set to
     * `true`.
     * Numeric custom attributes: each key can only map to one numeric value,
     * otherwise an error is thrown. Client can also filter on numeric custom
     * attributes using '&gt;', '&lt;' or '=' operators.
     * String custom attributes: each key can map up to 50 string values. For
     * filterable string value, each value has a byte size of no more than 256B.
     * For unfilterable string values, the maximum byte size of a single key is
     * 64B. An error is thrown for any request exceeding the limit.
     * The maximum total byte size is 10KB.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
     */
    @java.lang.Override

    public com.google.cloud.talent.v4beta1.CustomAttribute getCustomAttributesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> map =
          internalGetCustomAttributes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearCustomAttributes() {
      internalGetMutableCustomAttributes().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A map of fields to hold both filterable and non-filterable custom profile
     * attributes that aren't covered by the provided structured fields. See
     * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
     * At most 100 filterable and at most 100 unfilterable keys are supported. If
     * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
     * by default. These are filterable when the `filterable` flag is set to
     * `true`.
     * Numeric custom attributes: each key can only map to one numeric value,
     * otherwise an error is thrown. Client can also filter on numeric custom
     * attributes using '&gt;', '&lt;' or '=' operators.
     * String custom attributes: each key can map up to 50 string values. For
     * filterable string value, each value has a byte size of no more than 256B.
     * For unfilterable string values, the maximum byte size of a single key is
     * 64B. An error is thrown for any request exceeding the limit.
     * The maximum total byte size is 10KB.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
     */

    public Builder removeCustomAttributes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableCustomAttributes().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute>
    getMutableCustomAttributes() {
      return internalGetMutableCustomAttributes().getMutableMap();
    }
    /**
     * <pre>
     * A map of fields to hold both filterable and non-filterable custom profile
     * attributes that aren't covered by the provided structured fields. See
     * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
     * At most 100 filterable and at most 100 unfilterable keys are supported. If
     * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
     * by default. These are filterable when the `filterable` flag is set to
     * `true`.
     * Numeric custom attributes: each key can only map to one numeric value,
     * otherwise an error is thrown. Client can also filter on numeric custom
     * attributes using '&gt;', '&lt;' or '=' operators.
     * String custom attributes: each key can map up to 50 string values. For
     * filterable string value, each value has a byte size of no more than 256B.
     * For unfilterable string values, the maximum byte size of a single key is
     * 64B. An error is thrown for any request exceeding the limit.
     * The maximum total byte size is 10KB.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
     */
    public Builder putCustomAttributes(
        java.lang.String key,
        com.google.cloud.talent.v4beta1.CustomAttribute value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableCustomAttributes().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * A map of fields to hold both filterable and non-filterable custom profile
     * attributes that aren't covered by the provided structured fields. See
     * [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.
     * At most 100 filterable and at most 100 unfilterable keys are supported. If
     * limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
     * by default. These are filterable when the `filterable` flag is set to
     * `true`.
     * Numeric custom attributes: each key can only map to one numeric value,
     * otherwise an error is thrown. Client can also filter on numeric custom
     * attributes using '&gt;', '&lt;' or '=' operators.
     * String custom attributes: each key can map up to 50 string values. For
     * filterable string value, each value has a byte size of no more than 256B.
     * For unfilterable string values, the maximum byte size of a single key is
     * 64B. An error is thrown for any request exceeding the limit.
     * The maximum total byte size is 10KB.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.talent.v4beta1.CustomAttribute&gt; custom_attributes = 26;</code>
     */

    public Builder putAllCustomAttributes(
        java.util.Map<java.lang.String, com.google.cloud.talent.v4beta1.CustomAttribute> values) {
      internalGetMutableCustomAttributes().getMutableMap()
          .putAll(values);
      return this;
    }

    private boolean processed_ ;
    /**
     * <pre>
     * Output only. Indicates if a summarized profile was created as part of the
     * profile creation API call. This flag does not indicate whether a profile is
     * searchable or not.
     * </pre>
     *
     * <code>bool processed = 27 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The processed.
     */
    @java.lang.Override
    public boolean getProcessed() {
      return processed_;
    }
    /**
     * <pre>
     * Output only. Indicates if a summarized profile was created as part of the
     * profile creation API call. This flag does not indicate whether a profile is
     * searchable or not.
     * </pre>
     *
     * <code>bool processed = 27 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The processed to set.
     * @return This builder for chaining.
     */
    public Builder setProcessed(boolean value) {
      
      processed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Indicates if a summarized profile was created as part of the
     * profile creation API call. This flag does not indicate whether a profile is
     * searchable or not.
     * </pre>
     *
     * <code>bool processed = 27 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearProcessed() {
      
      processed_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object keywordSnippet_ = "";
    /**
     * <pre>
     * Output only. Keyword snippet shows how the search result is related to a
     * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
     * </pre>
     *
     * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The keywordSnippet.
     */
    public java.lang.String getKeywordSnippet() {
      java.lang.Object ref = keywordSnippet_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keywordSnippet_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. Keyword snippet shows how the search result is related to a
     * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
     * </pre>
     *
     * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return The bytes for keywordSnippet.
     */
    public com.google.protobuf.ByteString
        getKeywordSnippetBytes() {
      java.lang.Object ref = keywordSnippet_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keywordSnippet_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. Keyword snippet shows how the search result is related to a
     * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
     * </pre>
     *
     * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The keywordSnippet to set.
     * @return This builder for chaining.
     */
    public Builder setKeywordSnippet(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keywordSnippet_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Keyword snippet shows how the search result is related to a
     * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
     * </pre>
     *
     * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return This builder for chaining.
     */
    public Builder clearKeywordSnippet() {
      
      keywordSnippet_ = getDefaultInstance().getKeywordSnippet();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Keyword snippet shows how the search result is related to a
     * search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
     * </pre>
     *
     * <code>string keyword_snippet = 28 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param value The bytes for keywordSnippet to set.
     * @return This builder for chaining.
     */
    public Builder setKeywordSnippetBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keywordSnippet_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.AvailabilitySignal> availabilitySignals_ =
      java.util.Collections.emptyList();
    private void ensureAvailabilitySignalsIsMutable() {
      if (!((bitField0_ & 0x00010000) != 0)) {
        availabilitySignals_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.AvailabilitySignal>(availabilitySignals_);
        bitField0_ |= 0x00010000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.AvailabilitySignal, com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder, com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder> availabilitySignalsBuilder_;

    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.AvailabilitySignal> getAvailabilitySignalsList() {
      if (availabilitySignalsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(availabilitySignals_);
      } else {
        return availabilitySignalsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public int getAvailabilitySignalsCount() {
      if (availabilitySignalsBuilder_ == null) {
        return availabilitySignals_.size();
      } else {
        return availabilitySignalsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.AvailabilitySignal getAvailabilitySignals(int index) {
      if (availabilitySignalsBuilder_ == null) {
        return availabilitySignals_.get(index);
      } else {
        return availabilitySignalsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setAvailabilitySignals(
        int index, com.google.cloud.talent.v4beta1.AvailabilitySignal value) {
      if (availabilitySignalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAvailabilitySignalsIsMutable();
        availabilitySignals_.set(index, value);
        onChanged();
      } else {
        availabilitySignalsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setAvailabilitySignals(
        int index, com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder builderForValue) {
      if (availabilitySignalsBuilder_ == null) {
        ensureAvailabilitySignalsIsMutable();
        availabilitySignals_.set(index, builderForValue.build());
        onChanged();
      } else {
        availabilitySignalsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addAvailabilitySignals(com.google.cloud.talent.v4beta1.AvailabilitySignal value) {
      if (availabilitySignalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAvailabilitySignalsIsMutable();
        availabilitySignals_.add(value);
        onChanged();
      } else {
        availabilitySignalsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addAvailabilitySignals(
        int index, com.google.cloud.talent.v4beta1.AvailabilitySignal value) {
      if (availabilitySignalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAvailabilitySignalsIsMutable();
        availabilitySignals_.add(index, value);
        onChanged();
      } else {
        availabilitySignalsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addAvailabilitySignals(
        com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder builderForValue) {
      if (availabilitySignalsBuilder_ == null) {
        ensureAvailabilitySignalsIsMutable();
        availabilitySignals_.add(builderForValue.build());
        onChanged();
      } else {
        availabilitySignalsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addAvailabilitySignals(
        int index, com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder builderForValue) {
      if (availabilitySignalsBuilder_ == null) {
        ensureAvailabilitySignalsIsMutable();
        availabilitySignals_.add(index, builderForValue.build());
        onChanged();
      } else {
        availabilitySignalsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addAllAvailabilitySignals(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.AvailabilitySignal> values) {
      if (availabilitySignalsBuilder_ == null) {
        ensureAvailabilitySignalsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, availabilitySignals_);
        onChanged();
      } else {
        availabilitySignalsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder clearAvailabilitySignals() {
      if (availabilitySignalsBuilder_ == null) {
        availabilitySignals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
      } else {
        availabilitySignalsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder removeAvailabilitySignals(int index) {
      if (availabilitySignalsBuilder_ == null) {
        ensureAvailabilitySignalsIsMutable();
        availabilitySignals_.remove(index);
        onChanged();
      } else {
        availabilitySignalsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder getAvailabilitySignalsBuilder(
        int index) {
      return getAvailabilitySignalsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder getAvailabilitySignalsOrBuilder(
        int index) {
      if (availabilitySignalsBuilder_ == null) {
        return availabilitySignals_.get(index);  } else {
        return availabilitySignalsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder> 
         getAvailabilitySignalsOrBuilderList() {
      if (availabilitySignalsBuilder_ != null) {
        return availabilitySignalsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(availabilitySignals_);
      }
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder addAvailabilitySignalsBuilder() {
      return getAvailabilitySignalsFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.AvailabilitySignal.getDefaultInstance());
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder addAvailabilitySignalsBuilder(
        int index) {
      return getAvailabilitySignalsFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.AvailabilitySignal.getDefaultInstance());
    }
    /**
     * <pre>
     * Output only. Candidate's availability signals.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.AvailabilitySignal availability_signals = 70 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder> 
         getAvailabilitySignalsBuilderList() {
      return getAvailabilitySignalsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.AvailabilitySignal, com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder, com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder> 
        getAvailabilitySignalsFieldBuilder() {
      if (availabilitySignalsBuilder_ == null) {
        availabilitySignalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.AvailabilitySignal, com.google.cloud.talent.v4beta1.AvailabilitySignal.Builder, com.google.cloud.talent.v4beta1.AvailabilitySignalOrBuilder>(
                availabilitySignals_,
                ((bitField0_ & 0x00010000) != 0),
                getParentForChildren(),
                isClean());
        availabilitySignals_ = null;
      }
      return availabilitySignalsBuilder_;
    }

    private java.util.List<com.google.cloud.talent.v4beta1.Location> derivedAddresses_ =
      java.util.Collections.emptyList();
    private void ensureDerivedAddressesIsMutable() {
      if (!((bitField0_ & 0x00020000) != 0)) {
        derivedAddresses_ = new java.util.ArrayList<com.google.cloud.talent.v4beta1.Location>(derivedAddresses_);
        bitField0_ |= 0x00020000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Location, com.google.cloud.talent.v4beta1.Location.Builder, com.google.cloud.talent.v4beta1.LocationOrBuilder> derivedAddressesBuilder_;

    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Location> getDerivedAddressesList() {
      if (derivedAddressesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(derivedAddresses_);
      } else {
        return derivedAddressesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public int getDerivedAddressesCount() {
      if (derivedAddressesBuilder_ == null) {
        return derivedAddresses_.size();
      } else {
        return derivedAddressesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.Location getDerivedAddresses(int index) {
      if (derivedAddressesBuilder_ == null) {
        return derivedAddresses_.get(index);
      } else {
        return derivedAddressesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setDerivedAddresses(
        int index, com.google.cloud.talent.v4beta1.Location value) {
      if (derivedAddressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDerivedAddressesIsMutable();
        derivedAddresses_.set(index, value);
        onChanged();
      } else {
        derivedAddressesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder setDerivedAddresses(
        int index, com.google.cloud.talent.v4beta1.Location.Builder builderForValue) {
      if (derivedAddressesBuilder_ == null) {
        ensureDerivedAddressesIsMutable();
        derivedAddresses_.set(index, builderForValue.build());
        onChanged();
      } else {
        derivedAddressesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addDerivedAddresses(com.google.cloud.talent.v4beta1.Location value) {
      if (derivedAddressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDerivedAddressesIsMutable();
        derivedAddresses_.add(value);
        onChanged();
      } else {
        derivedAddressesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addDerivedAddresses(
        int index, com.google.cloud.talent.v4beta1.Location value) {
      if (derivedAddressesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDerivedAddressesIsMutable();
        derivedAddresses_.add(index, value);
        onChanged();
      } else {
        derivedAddressesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addDerivedAddresses(
        com.google.cloud.talent.v4beta1.Location.Builder builderForValue) {
      if (derivedAddressesBuilder_ == null) {
        ensureDerivedAddressesIsMutable();
        derivedAddresses_.add(builderForValue.build());
        onChanged();
      } else {
        derivedAddressesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addDerivedAddresses(
        int index, com.google.cloud.talent.v4beta1.Location.Builder builderForValue) {
      if (derivedAddressesBuilder_ == null) {
        ensureDerivedAddressesIsMutable();
        derivedAddresses_.add(index, builderForValue.build());
        onChanged();
      } else {
        derivedAddressesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder addAllDerivedAddresses(
        java.lang.Iterable<? extends com.google.cloud.talent.v4beta1.Location> values) {
      if (derivedAddressesBuilder_ == null) {
        ensureDerivedAddressesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, derivedAddresses_);
        onChanged();
      } else {
        derivedAddressesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder clearDerivedAddresses() {
      if (derivedAddressesBuilder_ == null) {
        derivedAddresses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
      } else {
        derivedAddressesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public Builder removeDerivedAddresses(int index) {
      if (derivedAddressesBuilder_ == null) {
        ensureDerivedAddressesIsMutable();
        derivedAddresses_.remove(index);
        onChanged();
      } else {
        derivedAddressesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.Location.Builder getDerivedAddressesBuilder(
        int index) {
      return getDerivedAddressesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.LocationOrBuilder getDerivedAddressesOrBuilder(
        int index) {
      if (derivedAddressesBuilder_ == null) {
        return derivedAddresses_.get(index);  } else {
        return derivedAddressesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public java.util.List<? extends com.google.cloud.talent.v4beta1.LocationOrBuilder> 
         getDerivedAddressesOrBuilderList() {
      if (derivedAddressesBuilder_ != null) {
        return derivedAddressesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(derivedAddresses_);
      }
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.Location.Builder addDerivedAddressesBuilder() {
      return getDerivedAddressesFieldBuilder().addBuilder(
          com.google.cloud.talent.v4beta1.Location.getDefaultInstance());
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public com.google.cloud.talent.v4beta1.Location.Builder addDerivedAddressesBuilder(
        int index) {
      return getDerivedAddressesFieldBuilder().addBuilder(
          index, com.google.cloud.talent.v4beta1.Location.getDefaultInstance());
    }
    /**
     * <pre>
     * Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].
     * [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
     * same order.
     * </pre>
     *
     * <code>repeated .google.cloud.talent.v4beta1.Location derived_addresses = 64 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    public java.util.List<com.google.cloud.talent.v4beta1.Location.Builder> 
         getDerivedAddressesBuilderList() {
      return getDerivedAddressesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.talent.v4beta1.Location, com.google.cloud.talent.v4beta1.Location.Builder, com.google.cloud.talent.v4beta1.LocationOrBuilder> 
        getDerivedAddressesFieldBuilder() {
      if (derivedAddressesBuilder_ == null) {
        derivedAddressesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.talent.v4beta1.Location, com.google.cloud.talent.v4beta1.Location.Builder, com.google.cloud.talent.v4beta1.LocationOrBuilder>(
                derivedAddresses_,
                ((bitField0_ & 0x00020000) != 0),
                getParentForChildren(),
                isClean());
        derivedAddresses_ = null;
      }
      return derivedAddressesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.talent.v4beta1.Profile)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.talent.v4beta1.Profile)
  private static final com.google.cloud.talent.v4beta1.Profile DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.talent.v4beta1.Profile();
  }

  public static com.google.cloud.talent.v4beta1.Profile getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Profile>
      PARSER = new com.google.protobuf.AbstractParser<Profile>() {
    @java.lang.Override
    public Profile parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Profile(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Profile> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Profile> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.talent.v4beta1.Profile getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

