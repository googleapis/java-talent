// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/talent/v4beta1/filters.proto

package com.google.cloud.talent.v4beta1;

public interface EmployerFilterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.talent.v4beta1.EmployerFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The name of the employer, for example "Google", "Alphabet".
   * </pre>
   *
   * <code>string employer = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The employer.
   */
  java.lang.String getEmployer();
  /**
   * <pre>
   * Required. The name of the employer, for example "Google", "Alphabet".
   * </pre>
   *
   * <code>string employer = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for employer.
   */
  com.google.protobuf.ByteString
      getEmployerBytes();

  /**
   * <pre>
   * Define set of [EmploymentRecord][google.cloud.talent.v4beta1.EmploymentRecord]s to search against.
   * Defaults to [EmployerFilterMode.ALL_EMPLOYMENT_RECORDS][google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode.ALL_EMPLOYMENT_RECORDS].
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode mode = 2;</code>
   * @return The enum numeric value on the wire for mode.
   */
  int getModeValue();
  /**
   * <pre>
   * Define set of [EmploymentRecord][google.cloud.talent.v4beta1.EmploymentRecord]s to search against.
   * Defaults to [EmployerFilterMode.ALL_EMPLOYMENT_RECORDS][google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode.ALL_EMPLOYMENT_RECORDS].
   * </pre>
   *
   * <code>.google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode mode = 2;</code>
   * @return The mode.
   */
  com.google.cloud.talent.v4beta1.EmployerFilter.EmployerFilterMode getMode();

  /**
   * <pre>
   * Whether to apply negation to the filter so profiles matching the filter
   * is excluded.
   * </pre>
   *
   * <code>bool negated = 3;</code>
   * @return The negated.
   */
  boolean getNegated();
}
